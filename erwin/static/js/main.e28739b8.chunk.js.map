{"version":3,"sources":["stores/application.js","stores/spotify.js","apis/spotify.js","stores/index.jsx","apis/backend.js","hooks/screensize.js","views/shared/LandingPage.jsx","views/shared/Navbar.jsx","views/host/MediaControlCard.jsx","views/host/Playlists.jsx","views/host/Memories.jsx","views/host/Songs.jsx","views/shared/AddSongDialog.jsx","hooks/useToaster.js","views/host/index.jsx","views/guest/Songs.jsx","views/guest/AddMemoryDialog.jsx","views/guest/NoPlaylist.jsx","views/guest/index.jsx","views/shared/Main.jsx","theme.jsx","index.js"],"names":["ApplicationStore","api","spotifyStore","hostOrGuest","room","username","memories","socket","guests","songIdForMemory","popup","autoBind","this","authCode","search","window","location","href","includes","code","split","history","replaceState","origin","getSpotifyAuthCode","createRoom","getSocket","onopen","sendMessage","onmessage","e","message","JSON","parse","data","console","log","handleMessage","action","initialize","message_data","isHost","handleMessageFromGuest","isGuest","handleMessageFromHost","getSongs","count","Number","getMemories","reload","playlist_id","setPlaylist","args","send","stringify","from","close","room_code","localStorage","getItem","room_name","name","removeItem","initializeSocket","Math","floor","random","setItem","oauth","redirect","getRoom","songId","uri","addSong","text","file","saveMemory","song_id","user","filename","upload_url","saveMemoryImage","memory_id","deleteMemory","filter","memory","pk","songs","find","song","id","decorate","observable","leaveRoom","openAddMemoryPopup","openAddSongPopup","closeAddMemoryPopup","closeAddSongPopup","setSelectedSong","nav","computed","selectedSong","SpotifyStore","spotify_api","a","token","access_token","preparePlayer","getPlaylists","Promise","resolve","reject","onSpotifyWebPlaybackSDKReady","startPlayer","document","getElementById","script","createElement","type","async","defer","src","onload","onerror","error","Error","head","appendChild","player","Spotify","Player","getOAuthToken","cb","volume","addListener","device_id","player_state","connect","playlists","createPlaylist","description","query","playSong","queueSong","togglePlayback","playback","paused","nextSong","next","setCurrentSong","track_window","current_track","playlist","setSong","goBack","current_song","SpotifyApi","superagent","put","base","set","Authorization","uris","post","WebSocket","env","NODE_ENV","BACKEND_BASE_DEV","BACKEND_BASE_PRD","get","response","body","delete","PROTOCOL_DEV","PROTOCOL_PRD","applicationStore","context","createContext","useStores","useContext","useScreenSize","isLarge","useMediaQuery","minWidth","isMedium","isSmall","useStyles","makeStyles","theme","dialog","breakpoints","up","width","height","Initial","onCreate","onJoin","DialogTitle","DialogContent","DialogActions","Grid","container","spacing","item","xs","Button","fullWidth","size","color","variant","onClick","Create","onGoBack","useState","setName","TextField","label","onChange","target","value","disabled","Join","setUser","setCode","length","LandingPage","observer","generateRoom","joinRoom","classes","screensize","stage","setStage","Dialog","onClose","open","fullScreen","paper","grow","flexGrow","appbar","flex","chip","marginRight","Navbar","closeRoom","anchorEl","setAnchorEl","AppBar","position","className","Toolbar","Chip","icon","Room","AccountCircle","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","Boolean","MenuItem","root","display","details","flexDirection","content","cover","controls","alignItems","paddingLeft","paddingBottom","playIcon","MediaControlCard","Card","CardContent","Typography","component","title","artists","join","IconButton","aria-label","PlayArrow","Pause","SkipNext","CardMedia","image","img","padding","overflow","cursor","background","palette","default","choosePlaylistBanner","Playlists","Paper","List","map","index","ListItem","ListItemAvatar","Avatar","alt","ListItemText","primary","secondary","owner","ListItemSecondaryAction","Divider","card","marginTop","selectedSongText","Memories","song_memories","style","overflowY","overflowX","avatar","onDelete","CardActionArea","square","downloadUrl","gutterBottom","CardActions","Songs","onSelectSong","Queue","minHeight","marginLeft","dialogcontent","AddSongDialog","addToast","enqueueSnackbar","useSnackbar","options","anchorOrigin","horizontal","vertical","useToaster","setQuery","debounceId","setDebounceId","results","setResults","q","clearTimeout","setTimeout","then","result","catch","Add","box","paddingTop","songspaper","gridRoot","flexWrap","flexshrink","playlistscontainer","songsBanner","justifyContent","tabs","SongsAndMemories","currentTab","setCurrentTab","Tabs","_","tab","Tab","Host","Container","Box","direction","RateReview","AddMemoryDialog","addMemory","setMemory","handleFiles","files","multiline","rows","substr","dropzoneClass","filesLimit","acceptedFiles","dropzoneText","showAlerts","noplaylist","NoPlaylist","songscontainer","dropzone","Guest","App","useEffect","left","right","top","bottom","Helmet","charSet","createMuiTheme","main","contrastText","red","ReactDOM","render","ThemeProvider","CssBaseline","maxSnack","Main"],"mappings":"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","file":"static/js/main.e28739b8.chunk.js","sourcesContent":["import { observable, action, decorate, computed } from \"mobx\";\nimport autoBind from \"auto-bind\";\n\nconst generateRoomCode = () => Math.floor(Math.random() * 90000) + 10000;\n\nconst getSpotifyAuthCode = () => {\n    const search = window.location.href;\n    if (!search.includes(\"?code\")) return;\n    const code = search.split(\"?code=\")[1];\n    window.history.replaceState({}, \"\", window.location.origin);\n    return code;\n};\n\nexport class ApplicationStore {\n    api = null;\n    spotifyStore = null;\n    hostOrGuest = null;\n    room = null;\n    username = null;\n    memories = [];\n    socket = null;\n    guests = 0;\n    songIdForMemory = null;\n    popup = null;\n\n    constructor(api, spotifyStore) {\n        autoBind(this);\n        this.api = api;\n        this.spotifyStore = spotifyStore;\n    }\n\n    initialize() {\n        const authCode = getSpotifyAuthCode();\n        if (authCode) {\n            this.createRoom(authCode);\n        }\n    }\n\n    initializeSocket() {\n        this.socket = this.api.getSocket();\n\n        this.socket.onopen = () => {\n            this.sendMessage(\"SET_CLIENT_META\", {\n                room: this.room.code,\n                hostOrGuest: this.hostOrGuest,\n            });\n        };\n        this.socket.onmessage = (e) => {\n            const message = JSON.parse(e.data);\n            console.log(\"Received: '\" + e.data + \"'\");\n            this.handleMessage(message.action, message);\n        };\n\n        this.spotifyStore.initialize(this.room, this.hostOrGuest, this.socket);\n    }\n\n    handleMessage(action, message_data) {\n        if (action === \"PING\") {\n            this.sendMessage(\"PONG\");\n            return;\n        }\n        if (action === \"NEW_SONG\") {\n            this.spotifyStore.getSongs();\n            return;\n        }\n        if (this.isHost) {\n            this.handleMessageFromGuest(action, message_data);\n        }\n        if (this.isGuest) {\n            this.handleMessageFromHost(action, message_data);\n        }\n    }\n\n    handleMessageFromGuest(action, message_data) {\n        if (action === \"UPDATE_GUEST_COUNT\") {\n            const { count } = message_data;\n            this.guests = Number(count);\n        }\n        if (action === \"NEW_MEMORY\") {\n            this.getMemories();\n        }\n    }\n\n    handleMessageFromHost(action, message_data) {\n        if (action === \"ROOM_CLOSED\") {\n            window.location.reload();\n        }\n        if (action === \"PLAYLIST_SET\") {\n            const { playlist_id } = message_data;\n            this.spotifyStore.setPlaylist(playlist_id);\n        }\n    }\n\n    sendMessage(action, args = {}) {\n        this.socket.send(\n            JSON.stringify({\n                action,\n                from: this.hostOrGuest,\n                ...args,\n            })\n        );\n    }\n\n    get nav() {\n        if (!this.hostOrGuest) return \"landing_page\";\n        if (this.hostOrGuest === \"host\") return \"host\";\n        return \"guest\";\n    }\n\n    leaveRoom() {\n        this.room = null;\n        this.username = null;\n        this.hostOrGuest = null;\n        this.socket?.close();\n        this.socket = null;\n    }\n\n    async closeRoom() {\n        window.location.reload();\n    }\n\n    async createRoom(code) {\n        let room;\n        const room_code = window.localStorage.getItem(\"code\");\n        const room_name = window.localStorage.getItem(\"name\");\n        try {\n            room = await this.api.createRoom({\n                code,\n                room: { code: room_code, name: room_name },\n            });\n        } catch (e) {\n            console.log(\"🧙‍♂️\", e);\n        }\n\n        window.localStorage.removeItem(\"code\");\n        window.localStorage.removeItem(\"name\");\n        if (!room) {\n            this.room = null;\n            this.hostOrGuest = null;\n            return;\n        }\n\n        this.room = room;\n        this.hostOrGuest = \"host\";\n\n        this.initializeSocket();\n    }\n\n    async generateRoom(name) {\n        const code = generateRoomCode();\n        window.localStorage.setItem(\"name\", name);\n        window.localStorage.setItem(\"code\", code);\n        const redirect = await this.api.oauth();\n        window.location = redirect;\n    }\n\n    async joinRoom(username, code) {\n        let room;\n        room = await this.api.getRoom({\n            code,\n        });\n        if (!room) return;\n\n        this.room = room;\n        this.username = username;\n        this.hostOrGuest = \"guest\";\n\n        this.initializeSocket();\n    }\n\n    openAddMemoryPopup(songId) {\n        this.songIdForMemory = songId;\n        this.popup = \"addMemory\";\n    }\n\n    openAddSongPopup() {\n        this.popup = \"addSong\";\n    }\n\n    closeAddMemoryPopup() {\n        this.popup = null;\n        this.songIdForMemory = null;\n    }\n\n    closeAddSongPopup() {\n        this.popup = null;\n    }\n\n    async addSong(uri) {\n        await this.api.addSong({ room_code: this.room.code, uri });\n        this.spotifyStore.getSongs();\n        this.sendMessage(\"NEW_SONG\");\n    }\n\n    async addMemory({ text, file }) {\n        try {\n            const upload_url = await this.api.saveMemory({\n                room_code: this.room.code,\n                song_id: this.songIdForMemory,\n                user: this.username,\n                text,\n                filename: file.name,\n            });\n            await this.api.saveMemoryImage({\n                upload_url,\n                file,\n            });\n            this.sendMessage(\"NEW_MEMORY\");\n        } catch (e) {\n            console.log(\"🧙‍♂️\", e);\n        }\n    }\n\n    async deleteMemory(memory_id) {\n        try {\n            await this.api.deleteMemory({\n                room_code: this.room.code,\n                memory_id,\n            });\n            this.memories = this.memories.filter(\n                (memory) => memory?.pk !== memory_id\n            );\n        } catch (e) {\n            console.log(\"🧙‍♂️\", e);\n        }\n    }\n\n    async getMemories() {\n        try {\n            this.memories = await this.api.getMemories({\n                room_code: this.room.code,\n            });\n            console.log(JSON.parse(JSON.stringify(this.memories)));\n        } catch (e) {\n            console.log(\"🧙‍♂️\", e);\n        }\n    }\n\n    get isHost() {\n        return this.hostOrGuest === \"host\";\n    }\n\n    get isGuest() {\n        return this.hostOrGuest === \"guest\";\n    }\n\n    get selectedSong() {\n        const current_track = this.spotifyStore.songs.find(\n            (song) => song.id === this.songIdForMemory\n        );\n        return current_track;\n    }\n\n    setSelectedSong(song_id) {\n        this.songIdForMemory = song_id;\n    }\n}\n\ndecorate(ApplicationStore, {\n    hostOrGuest: observable,\n    username: observable,\n    room: observable,\n    guests: observable,\n    memories: observable,\n    songIdForMemory: observable,\n    popup: observable,\n    initialize: action,\n    createRoom: action,\n    leaveRoom: action,\n    openAddMemoryPopup: action,\n    openAddSongPopup: action,\n    closeAddMemoryPopup: action,\n    closeAddSongPopup: action,\n    deleteMemory: action,\n    setSelectedSong: action,\n    nav: computed,\n    isHost: computed,\n    isGuest: computed,\n    selectedSong: computed,\n});\n","import { observable, action, computed, decorate } from \"mobx\";\n\nexport class SpotifyStore {\n    constructor(api, spotify_api) {\n        this.api = api;\n        this.spotify_api = spotify_api;\n\n        // initialize data\n        this.token = null;\n        this.room_code = null;\n        this.room_name = null;\n        this.player = null;\n        this.device_id = null;\n        this.player_state = null;\n\n        // spotify data\n        this.playlists = [];\n        this.playlist_id = null;\n        this.songs = [];\n        this.song_id = null;\n\n        this.socket = null;\n        this.hostOrGuest = null;\n    }\n\n    initialize = async (room, hostOrGuest, socket) => {\n        this.token = room.access_token;\n        this.room_code = room.code;\n        this.room_name = room.name;\n        this.hostOrGuest = hostOrGuest;\n        if (this.isHost) {\n            this.socket = socket;\n            this.preparePlayer();\n            this.getPlaylists();\n        }\n\n        if (this.isGuest && room.playlist_id) {\n            this.setPlaylist(room.playlist_id);\n        }\n    };\n\n    preparePlayer = () =>\n        new Promise((resolve, reject) => {\n            if (!window.onSpotifyWebPlaybackSDKReady) {\n                window.onSpotifyWebPlaybackSDKReady = this.startPlayer;\n            } else {\n                this.startPlayer();\n            }\n\n            const scriptTag = document.getElementById(\"spotify-player\");\n\n            if (!scriptTag) {\n                const script = document.createElement(\"script\");\n\n                script.id = \"spotify-player\";\n                script.type = \"text/javascript\";\n                script.async = false;\n                script.defer = true;\n                script.src = \"https://sdk.scdn.co/spotify-player.js\";\n                script.onload = () => resolve();\n                script.onerror = (error) =>\n                    reject(new Error(`loadScript: ${error.message}`));\n\n                document.head.appendChild(script);\n            } else {\n                resolve();\n            }\n        });\n\n    startPlayer = () => {\n        this.player = new window.Spotify.Player({\n            getOAuthToken: (cb) => {\n                cb(this.token);\n            },\n            name: \"Playlist Memories\",\n            volume: 1,\n        });\n\n        this.player.addListener(\"ready\", (e) => {\n            this.device_id = e.device_id;\n        });\n        this.player.addListener(\"not_ready\", (e) => {\n            console.log(\"not_ready\", e);\n        });\n        this.player.addListener(\"player_state_changed\", (player_state) => {\n            this.player_state = player_state;\n        });\n        this.player.addListener(\"initialization_error\", (error) =>\n            console.log(\"initialization_error\", error.message)\n        );\n        this.player.addListener(\"authentication_error\", (error) =>\n            console.log(\"authentication_error\", error.message)\n        );\n        this.player.addListener(\"account_error\", (error) =>\n            console.log(\"account_error\", error.message)\n        );\n        this.player.addListener(\"playback_error\", (error) =>\n            console.log(\"playback_error\", error.message)\n        );\n\n        this.player.connect();\n    };\n\n    getPlaylists = async () => {\n        try {\n            this.playlists = await this.api.getPlaylists({\n                room_code: this.room_code,\n            });\n        } catch (e) {\n            console.error(e, \"Failed to get playlists!\");\n        }\n    };\n\n    setPlaylist = async (playlist_id) => {\n        if (this.isHost) {\n            const success = await this.api.setPlaylist({\n                room_code: this.room_code,\n                playlist_id,\n            });\n            if (!success) {\n                console.log(\"👲\", \"Failed to set playlist in room!!\");\n                return;\n            }\n\n            this.sendMessage(\"PLAYLIST_SET\", { playlist_id });\n        }\n\n        this.playlist_id = playlist_id;\n        if (playlist_id) this.getSongs();\n    };\n\n    createPlaylist = async () => {\n        if (this.isGuest) {\n            throw new Error(\n                \"Trying to create playlist as guest, this should not be possible!\"\n            );\n        }\n        const playlist_id = await this.api.createPlaylist({\n            room_code: this.room_code,\n            name: this.room_name,\n            description: \"A playlist created with Playlist Memories\",\n        });\n        if (!playlist_id) {\n            console.log(\"👩‍🎤\", \"Failed to create playlist!\");\n            return;\n        }\n        await this.getPlaylists();\n        this.setPlaylist(playlist_id);\n    };\n\n    search = async (query) =>\n        this.api.search({\n            query,\n            room_code: this.room_code,\n        });\n\n    getSongs = async () => {\n        this.songs = [];\n        try {\n            this.songs = await this.api.getSongs({\n                room_code: this.room_code,\n            });\n        } catch (e) {\n            console.error(e, \"Failed to get songs!\");\n        }\n    };\n\n    playSong = async (uri) => {\n        try {\n            await this.spotify_api.playSong({\n                device_id: this.device_id,\n                token: this.token,\n                uri,\n            });\n        } catch (e) {\n            console.error(e, \"Failed to play song!\");\n        }\n    };\n\n    queueSong = async (uri) => {\n        try {\n            await this.spotify_api.queueSong({\n                device_id: this.device_id,\n                token: this.token,\n                uri,\n            });\n        } catch (e) {\n            console.error(e, \"Failed to queue song!\");\n        }\n    };\n\n    togglePlayback = async () => {\n        try {\n            await this.spotify_api.togglePlayback({\n                playback: this.paused ? \"play\" : \"pause\",\n                device_id: this.device_id,\n                token: this.token,\n            });\n        } catch (e) {\n            console.error(e, \"Failed to toggle playback!\");\n        }\n    };\n\n    nextSong = async () => {\n        try {\n            await this.spotify_api.next({\n                device_id: this.device_id,\n                token: this.token,\n            });\n        } catch (e) {\n            console.error(e, \"Failed to toggle playback!\");\n        }\n    };\n\n    setCurrentSong = (song_id) => {\n        this.player_state = {\n            track_window: { current_track: { id: song_id } },\n        };\n    };\n\n    sendMessage(action, args) {\n        this.socket.send(\n            JSON.stringify({\n                action,\n                from: this.hostOrGuest,\n                ...args,\n            })\n        );\n    }\n\n    get paused() {\n        return this.player_state?.paused ?? true;\n    }\n\n    get current_song() {\n        const current_track = this.songs.find(\n            (song) =>\n                song.id === this.player_state?.track_window?.current_track?.id\n        );\n        return current_track;\n    }\n\n    get playlist() {\n        return this.playlists?.find(\n            (playlist) => playlist?.id === this.playlist_id\n        );\n    }\n\n    get isHost() {\n        return this.hostOrGuest === \"host\";\n    }\n\n    get isGuest() {\n        return this.hostOrGuest === \"guest\";\n    }\n}\n\ndecorate(SpotifyStore, {\n    token: observable,\n    player: observable,\n    device_id: observable,\n    player_state: observable,\n    playlists: observable,\n    playlist_id: observable,\n    room_code: observable,\n    room_name: observable,\n    songs: observable,\n    song_id: observable,\n    initialize: action,\n    startPlayer: action,\n    getPlaylists: action,\n    setPlaylist: action,\n    getSongs: action,\n    setSong: action,\n    setCurrentSong: action,\n    goBack: action,\n    paused: computed,\n    current_song: computed,\n    isHost: computed,\n    isGuest: computed,\n});\n","import superagent from \"superagent\";\n\nclass SpotifyApi {\n    constructor() {\n        this.base = `https://api.spotify.com/v1`;\n    }\n\n    playSong = async ({ token, device_id, uri }) => {\n        await superagent\n            .put(`${this.base}/me/player/play`)\n            .set({ Authorization: `Bearer ${token}` })\n            .query({ device_id })\n            .send({ uris: [uri] });\n    };\n\n    queueSong = async ({ token, device_id, uri }) => {\n        await superagent\n            .post(`${this.base}/me/player/queue`)\n            .set({ Authorization: `Bearer ${token}` })\n            .query({ device_id, uri });\n    };\n\n    togglePlayback = async ({ token, device_id, playback }) => {\n        await superagent\n            .put(`${this.base}/me/player/${playback}`)\n            .set({ Authorization: `Bearer ${token}` })\n            .query({ device_id });\n    };\n\n    next = async ({ token, device_id }) => {\n        await superagent\n            .post(`${this.base}/me/player/next`)\n            .set({ Authorization: `Bearer ${token}` })\n            .query({ device_id });\n    };\n}\n\nexport default SpotifyApi;\n","import { createContext, useContext } from \"react\";\n\nimport { ApplicationStore } from \"../stores/application\";\nimport { SpotifyStore } from \"../stores/spotify\";\n// import PlayerService from \"../stores/player\";\nimport SpotifyApi from \"../apis/spotify\";\nimport BackendApi from \"../apis/backend\";\n\nconst api = new BackendApi();\nconst spotify_api = new SpotifyApi();\nconst spotifyStore = new SpotifyStore(api, spotify_api);\nconst applicationStore = new ApplicationStore(api, spotifyStore);\nconst context = createContext({ applicationStore, spotifyStore });\n\nexport const useStores = () => useContext(context);\n","import superagent from \"superagent\";\nimport env from \"react-dotenv\";\n\nclass BackendApi {\n    constructor() {\n        this.base =\n            env.NODE_ENV === \"development\"\n                ? `${env.PROTOCOL_DEV}://${env.BACKEND_BASE_DEV}`\n                : `${env.PROTOCOL_PRD}://${env.BACKEND_BASE_PRD}`;\n    }\n\n    getSocket = () =>\n        new WebSocket(\n            `${env.NODE_ENV === \"development\" ? \"ws\" : \"wss\"}://${\n                env.NODE_ENV === \"development\"\n                    ? env.BACKEND_BASE_DEV\n                    : env.BACKEND_BASE_PRD\n            }`\n        );\n\n    oauth = async () => {\n        try {\n            const response = await superagent.get(`${this.base}/authorize`);\n            return response?.text;\n        } catch (e) {\n            console.log(\"👑\", e);\n        }\n    };\n\n    getRoom = async ({ code }) => {\n        try {\n            const response = await superagent.get(`${this.base}/room/${code}`);\n            return response?.body?.room;\n        } catch (e) {\n            console.log(\"🦸‍♂️\", e);\n            return false;\n        }\n    };\n\n    createRoom = async ({ room, code }) => {\n        try {\n            const response = await superagent\n                .post(`${this.base}/room`)\n                .send({ room, code });\n            return response?.body?.room;\n        } catch (e) {\n            console.log(\"👨‍👨‍👦‍👦\", e);\n        }\n    };\n\n    getPlaylists = async ({ room_code }) => {\n        try {\n            const response = await superagent.get(\n                `${this.base}/room/${room_code}/playlists`\n            );\n            return response.body || [];\n        } catch (e) {\n            console.log(\"👁\", e);\n        }\n    };\n\n    setPlaylist = async ({ room_code, playlist_id }) => {\n        try {\n            await superagent\n                .put(`${this.base}/room/${room_code}/playlist`)\n                .send({ playlist_id });\n            return true;\n        } catch (e) {\n            console.log(\"👁\", e);\n            return false;\n        }\n    };\n\n    createPlaylist = async ({ room_code, name, description }) => {\n        try {\n            const response = await superagent\n                .post(`${this.base}/room/${room_code}/playlist`)\n                .send({ name, description });\n\n            return response?.text;\n        } catch (e) {\n            console.log(\"😐\", e);\n            return false;\n        }\n    };\n\n    getSongs = async ({ room_code }) => {\n        try {\n            const response = await superagent.get(\n                `${this.base}/room/${room_code}/songs`\n            );\n            return response?.body || [];\n        } catch (e) {\n            console.log(\"👂\", e);\n        }\n    };\n\n    addSong = async ({ room_code, uri }) => {\n        await superagent.put(`${this.base}/room/${room_code}/songs/${uri}`);\n    };\n\n    search = async ({ room_code, query }) => {\n        try {\n            const response = await superagent.get(\n                `${this.base}/room/${room_code}/search/${query}`\n            );\n            return response?.body || [];\n        } catch (e) {\n            console.log(\"👨‍👧‍👦\", e);\n        }\n    };\n\n    getMemories = async ({ room_code }) => {\n        try {\n            const response = await superagent.get(\n                `${this.base}/room/${room_code}/memories`\n            );\n            return response?.body || [];\n        } catch (e) {\n            console.log(\"🙏\", e);\n        }\n    };\n\n    saveMemory = async ({ room_code, song_id, ...data }) => {\n        try {\n            const response = await superagent\n                .put(`${this.base}/room/${room_code}/memories`)\n                .send({ ...data, song_id });\n            return response?.body?.upload_url;\n        } catch (e) {\n            console.log(\"🙏\", e);\n        }\n    };\n\n    saveMemoryImage = async ({ file, upload_url }) => {\n        try {\n            await superagent\n                .put(upload_url)\n                .set(\"Content-Type\", file.type)\n                .send(file);\n            return true;\n        } catch (e) {\n            console.log(\"🙏\", e.response);\n        }\n    };\n\n    deleteMemory = async ({ room_code, memory_id }) => {\n        try {\n            await superagent.delete(\n                `${this.base}/room/${room_code}/memories/${memory_id}`\n            );\n            return true;\n        } catch (e) {\n            console.log(\"🙏\", e);\n        }\n    };\n}\n\nexport default BackendApi;\n","import { useMediaQuery } from \"react-responsive\";\n\nexport const useScreenSize = () => {\n    const isLarge = useMediaQuery({ minWidth: 1280 });\n    const isMedium = useMediaQuery({ minWidth: 960 });\n    const isSmall = useMediaQuery({ minWidth: 600 });\n\n    if (isLarge) return \"large\";\n    if (isMedium) return \"medium\";\n    if (isSmall) return \"small\";\n    return \"mobile\";\n};\n","import React, { useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Button } from \"@material-ui/core\";\nimport { Grid, TextField } from \"@material-ui/core\";\n\nimport { useStores } from \"../../stores\";\nimport { useScreenSize } from \"../../hooks/screensize\";\n\nconst useStyles = makeStyles((theme) => ({\n    dialog: {\n        [theme.breakpoints.up(\"sm\")]: {\n            width: \"34rem\",\n            height: \"15rem\",\n        },\n    },\n}));\n\nconst Initial = ({ onCreate, onJoin }) => {\n    return (\n        <>\n            <DialogTitle>Playlist Memories</DialogTitle>\n            <DialogContent>\n                Share the memories you've made with a song from your favorite\n                playlist!\n            </DialogContent>\n            <DialogActions>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <Button\n                            fullWidth\n                            size={\"medium\"}\n                            color={\"primary\"}\n                            variant={\"contained\"}\n                            onClick={onCreate}\n                        >\n                            Create room\n                        </Button>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Button\n                            fullWidth\n                            size={\"medium\"}\n                            color={\"primary\"}\n                            variant={\"contained\"}\n                            onClick={onJoin}\n                        >\n                            Join room\n                        </Button>\n                    </Grid>\n                </Grid>\n            </DialogActions>\n        </>\n    );\n};\n\nconst Create = ({ onCreate, onGoBack }) => {\n    const [name, setName] = useState(\"\");\n    return (\n        <>\n            <DialogTitle>Create room</DialogTitle>\n            <DialogContent>\n                <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    size={\"small\"}\n                    label={\"Room name\"}\n                    onChange={(e) => {\n                        setName(e.target.value);\n                    }}\n                    value={name}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <Button\n                            fullWidth\n                            size={\"medium\"}\n                            color={\"secondary\"}\n                            variant={\"contained\"}\n                            onClick={onGoBack}\n                        >\n                            Go back\n                        </Button>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Button\n                            fullWidth\n                            size={\"medium\"}\n                            color={\"primary\"}\n                            variant={\"contained\"}\n                            disabled={!name}\n                            onClick={() => {\n                                onCreate(name);\n                            }}\n                        >\n                            Create room\n                        </Button>\n                    </Grid>\n                </Grid>\n            </DialogActions>\n        </>\n    );\n};\n\nconst Join = ({ onJoin, onGoBack }) => {\n    const [user, setUser] = useState(\"\");\n    const [code, setCode] = useState(\"\");\n    return (\n        <>\n            <DialogTitle>Join room</DialogTitle>\n            <DialogContent>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <TextField\n                            fullWidth\n                            variant=\"outlined\"\n                            size={\"small\"}\n                            label={\"Username\"}\n                            onChange={(e) => {\n                                setUser(e.target.value);\n                            }}\n                            value={user}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            fullWidth\n                            variant=\"outlined\"\n                            size={\"small\"}\n                            label={\"Room code\"}\n                            onChange={(e) => {\n                                setCode(e.target.value);\n                            }}\n                            value={code}\n                        />\n                    </Grid>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <Button\n                            fullWidth\n                            size={\"medium\"}\n                            color={\"secondary\"}\n                            variant={\"contained\"}\n                            onClick={onGoBack}\n                        >\n                            Go back\n                        </Button>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Button\n                            fullWidth\n                            size={\"medium\"}\n                            color={\"primary\"}\n                            variant={\"contained\"}\n                            disabled={!user || code?.length !== 5}\n                            onClick={() => {\n                                onJoin(user, code);\n                            }}\n                        >\n                            Join room\n                        </Button>\n                    </Grid>\n                </Grid>\n            </DialogActions>\n        </>\n    );\n};\n\nconst LandingPage = observer(() => {\n    const {\n        applicationStore: { generateRoom, joinRoom },\n    } = useStores();\n\n    const classes = useStyles();\n    const screensize = useScreenSize();\n    const [stage, setStage] = useState(\"initial\");\n\n    return (\n        <Dialog\n            onClose={() => {}}\n            open\n            fullScreen={screensize === \"mobile\"}\n            classes={{ paper: classes.dialog }}\n        >\n            {stage === \"initial\" && (\n                <Initial\n                    onCreate={() => setStage(\"create\")}\n                    onJoin={() => setStage(\"join\")}\n                />\n            )}\n            {stage === \"create\" && (\n                <Create\n                    onCreate={(name) => generateRoom(name)}\n                    onGoBack={() => setStage(\"initial\")}\n                />\n            )}\n            {stage === \"join\" && (\n                <Join\n                    onJoin={(user, code) => joinRoom(user, code)}\n                    onGoBack={() => setStage(\"initial\")}\n                />\n            )}\n        </Dialog>\n    );\n});\n\nexport default LandingPage;\n","import React, { useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Menu, MenuItem, Chip } from \"@material-ui/core\";\nimport { AccountCircle, Room } from \"@material-ui/icons\";\n\nimport { useStores } from \"../../stores\";\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    appbar: {\n        flex: \"0 0 auto\",\n    },\n    chip: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst Navbar = observer(() => {\n    const {\n        applicationStore: { nav, username, leaveRoom, closeRoom, room, guests },\n    } = useStores();\n\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    return (\n        <AppBar position=\"static\" className={classes.appbar}>\n            <Toolbar>\n                <Chip\n                    icon={<Room />}\n                    label={`${room?.name}`}\n                    className={classes.chip}\n                />\n                {nav === \"guest\" && (\n                    <Chip\n                        icon={<AccountCircle />}\n                        label={`${username}`}\n                        className={classes.chip}\n                    />\n                )}\n                {nav === \"host\" && (\n                    <Chip\n                        icon={<AccountCircle />}\n                        label={`${guests}`}\n                        className={classes.chip}\n                    />\n                )}\n                <div className={classes.grow} />\n                {room && (\n                    <>\n                        <Button\n                            color=\"inherit\"\n                            aria-controls=\"simple-menu\"\n                            aria-haspopup=\"true\"\n                            onClick={(event) =>\n                                setAnchorEl(event.currentTarget)\n                            }\n                        >\n                            Code: {room.code}\n                        </Button>\n                        <Menu\n                            anchorEl={anchorEl}\n                            keepMounted\n                            open={Boolean(anchorEl)}\n                            onClose={() => setAnchorEl(null)}\n                        >\n                            <MenuItem\n                                onClick={\n                                    nav === \"guest\" ? leaveRoom : closeRoom\n                                }\n                            >\n                                {nav === \"guest\" ? \"Leave\" : \"Close\"} room\n                            </MenuItem>\n                        </Menu>\n                    </>\n                )}\n            </Toolbar>\n        </AppBar>\n    );\n});\n\nexport default Navbar;\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { SkipNext, PlayArrow, Pause } from \"@material-ui/icons\";\nimport {\n    Card,\n    CardContent,\n    Typography,\n    IconButton,\n    CardMedia,\n} from \"@material-ui/core\";\n\nimport { useStores } from \"../../stores\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexGrow: \"1\",\n    },\n    details: {\n        display: \"flex\",\n        flex: \"1 1 auto\",\n        flexDirection: \"column\",\n    },\n    content: {\n        flex: \"1 0 auto\",\n    },\n    cover: {\n        width: 151,\n    },\n    controls: {\n        display: \"flex\",\n        alignItems: \"center\",\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    playIcon: {\n        height: 38,\n        width: 38,\n    },\n}));\n\nconst MediaControlCard = observer(() => {\n    const classes = useStyles();\n\n    const {\n        spotifyStore: { paused, current_song, togglePlayback, nextSong },\n    } = useStores();\n\n    return !current_song ? null : (\n        <Card className={classes.root}>\n            <div className={classes.details}>\n                <CardContent className={classes.content}>\n                    <Typography component=\"h5\" variant=\"h5\">\n                        {current_song?.title || \"\"}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                        {current_song?.artists?.join(\", \") || \"\"}\n                    </Typography>\n                </CardContent>\n                <div className={classes.controls}>\n                    <IconButton\n                        aria-label=\"play/pause\"\n                        disabled={!current_song}\n                        onClick={togglePlayback}\n                    >\n                        {paused ? (\n                            <PlayArrow className={classes.playIcon} />\n                        ) : (\n                            <Pause className={classes.playIcon} />\n                        )}\n                    </IconButton>\n                    <IconButton\n                        aria-label=\"next\"\n                        disabled={!current_song}\n                        onClick={nextSong}\n                    >\n                        <SkipNext />\n                    </IconButton>\n                </div>\n            </div>\n            <CardMedia\n                className={classes.cover}\n                image={current_song?.img || \"\"}\n                title=\"Album cover\"\n            />\n        </Card>\n    );\n});\n\nexport default MediaControlCard;\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Paper,\n    List,\n    ListItem,\n    ListItemAvatar,\n    Avatar,\n    ListItemText,\n    Divider,\n    ListItemSecondaryAction,\n    Button,\n    Typography,\n} from \"@material-ui/core\";\n\nimport { useStores } from \"../../stores\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: { padding: theme.spacing(3), height: \"100%\", overflow: \"hidden\" },\n    playlists: {\n        width: \"100%\",\n        height: \"100%\",\n        overflow: \"scroll\",\n    },\n    playlist: {\n        cursor: \"pointer\",\n        \"&:hover\": {\n            background: theme.palette.background.default,\n        },\n    },\n    choosePlaylistBanner: { display: \"flex\", alignItems: \"center\" },\n}));\n\nconst Playlists = observer(() => {\n    const {\n        spotifyStore: { playlists, setPlaylist, createPlaylist },\n    } = useStores();\n\n    const classes = useStyles();\n\n    return (\n        <Paper className={classes.paper}>\n            <div className={classes.choosePlaylistBanner}>\n                <Typography variant=\"subtitle1\">\n                    Choose a playlist... Or&nbsp;\n                </Typography>\n                <Button color=\"primary\" onClick={createPlaylist}>\n                    Create a playlist\n                </Button>\n            </div>\n            <List className={classes.playlists}>\n                {playlists.map((playlist, index) => (\n                    <div key={playlist?.id || index}>\n                        <ListItem\n                            alignItems=\"flex-start\"\n                            className={classes.playlist}\n                        >\n                            <ListItemAvatar>\n                                <Avatar alt=\"\" src={playlist?.img || \"\"} />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={playlist?.title || \"\"}\n                                secondary={<>{playlist?.owner || \"\"}</>}\n                            />\n                            <ListItemSecondaryAction>\n                                <Button\n                                    color=\"primary\"\n                                    onClick={() => setPlaylist(playlist?.id)}\n                                >\n                                    Select\n                                </Button>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        <Divider variant=\"inset\" component=\"li\" />\n                    </div>\n                ))}\n            </List>\n        </Paper>\n    );\n});\n\nexport default Playlists;\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Card,\n    CardActionArea,\n    CardActions,\n    CardContent,\n    Typography,\n    CardMedia,\n    Grid,\n    Avatar,\n    Button,\n    Chip,\n} from \"@material-ui/core\";\n\nimport { useStores } from \"../../stores\";\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        background: \"#f0f0f0\",\n    },\n    memories: {\n        marginTop: \".5rem\",\n        flex: \"1 1 auto\",\n    },\n    image: {\n        height: \"10rem\",\n    },\n    selectedSong: { marginTop: \".5rem\" },\n    selectedSongText: { marginRight: \".5rem\" },\n}));\n\nconst Memories = observer(() => {\n    const {\n        applicationStore: {\n            memories,\n            deleteMemory,\n            selectedSong,\n            setSelectedSong,\n        },\n        spotifyStore: { current_song },\n    } = useStores();\n\n    const classes = useStyles();\n\n    const song_memories = memories.filter(\n        (memory) => memory.song_id === (selectedSong?.id || current_song?.id)\n    );\n\n    return (\n        <div\n            style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                flex: \"1 1 auto\",\n                overflowY: \"auto\",\n                overflowX: \"hidden\",\n            }}\n        >\n            <div style={{ flex: \"0 0 auto\" }}>\n                {selectedSong ? (\n                    <Grid container className={classes.selectedSong}>\n                        <Typography\n                            variant=\"h5\"\n                            className={classes.selectedSongText}\n                        >\n                            Memories for selected song:{\" \"}\n                        </Typography>\n                        <Chip\n                            color=\"secondary\"\n                            label={selectedSong?.title || \"Selected song\"}\n                            avatar={<Avatar>S</Avatar>}\n                            onDelete={() => {\n                                setSelectedSong();\n                            }}\n                        />\n                    </Grid>\n                ) : (\n                    <Typography\n                        variant=\"h5\"\n                        className={classes.selectedSong}\n                    >{`Memories for current song: ${\n                        current_song?.title || \"-\"\n                    }`}</Typography>\n                )}\n            </div>\n            <Grid container spacing={2} className={classes.memories}>\n                {song_memories.map((memory, index) => (\n                    <Grid key={memory?.id || index} item xs={4}>\n                        <Card className={classes.card}>\n                            <CardActionArea>\n                                <CardMedia\n                                    className={classes.image}\n                                    square\n                                    image={memory?.downloadUrl || \"\"}\n                                    title=\"Memory\"\n                                />\n                                <CardContent>\n                                    <Typography\n                                        gutterBottom\n                                        variant=\"h5\"\n                                        component=\"h2\"\n                                    >\n                                        {memory?.user || \"-\"}\n                                    </Typography>\n                                    <Typography\n                                        variant=\"body2\"\n                                        color=\"textSecondary\"\n                                        component=\"p\"\n                                    >\n                                        {memory?.text || \"-\"}\n                                    </Typography>\n                                </CardContent>\n                            </CardActionArea>\n                            <CardActions>\n                                <Button\n                                    size=\"small\"\n                                    color=\"primary\"\n                                    onClick={() => deleteMemory(memory?.pk)}\n                                >\n                                    Remove\n                                </Button>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                ))}\n            </Grid>\n        </div>\n    );\n});\n\nexport default Memories;\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    IconButton,\n    List,\n    ListItem,\n    ListItemAvatar,\n    Avatar,\n    ListItemText,\n    Divider,\n    ListItemSecondaryAction,\n    Chip,\n} from \"@material-ui/core\";\nimport { PlayArrow, Queue } from \"@material-ui/icons\";\n\nimport { useStores } from \"../../stores\";\n\nconst useStyles = makeStyles((theme) => ({\n    songs: {\n        overflow: \"scroll\",\n        width: \"100%\",\n        flex: \"1 1 auto\",\n    },\n    song: {\n        cursor: \"pointer\",\n        \"&:hover\": {\n            background: theme.palette.background.default,\n        },\n    },\n}));\n\nconst Songs = observer(({ onSelectSong }) => {\n    const {\n        applicationStore: { memories, setSelectedSong },\n        spotifyStore: { songs, playSong, queueSong },\n    } = useStores();\n\n    const classes = useStyles();\n\n    return (\n        <List className={classes.songs}>\n            {songs.map((song, index) => (\n                <div key={song?.id || index}>\n                    <ListItem alignItems=\"flex-start\" className={classes.song}>\n                        <ListItemAvatar>\n                            <Avatar alt=\"\" src={song?.img || \"\"} />\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={song?.title || \"\"}\n                            secondary={<>{song?.artists?.join(\", \") || \"\"}</>}\n                        />\n                        <ListItemSecondaryAction>\n                            <Chip\n                                color=\"secondary\"\n                                label={`${\n                                    memories?.filter(\n                                        (memory) => memory?.song_id === song?.id\n                                    )?.length\n                                }`}\n                                onClick={() => {\n                                    setSelectedSong(song?.id);\n                                    onSelectSong();\n                                }}\n                            />\n                            <IconButton\n                                aria-label=\"play\"\n                                onClick={() => playSong(song?.uri)}\n                            >\n                                <PlayArrow />\n                            </IconButton>\n                            <IconButton\n                                aria-label=\"queue\"\n                                onClick={() => queueSong(song?.uri)}\n                            >\n                                <Queue />\n                            </IconButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                    <Divider variant=\"inset\" component=\"li\" />\n                </div>\n            ))}\n        </List>\n    );\n});\n\nexport default Songs;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Grid,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Button,\n    Dialog,\n    TextField,\n    ListItem,\n    List,\n    ListItemAvatar,\n    Avatar,\n    ListItemText,\n    ListItemSecondaryAction,\n    Divider,\n    IconButton,\n} from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\nimport { observer } from \"mobx-react-lite\";\n\nimport { useToaster } from \"../../hooks/useToaster\";\nimport { useStores } from \"../../stores\";\nimport { useScreenSize } from \"../../hooks/screensize\";\n\nconst useStyles = makeStyles((theme) => ({\n    \"@global\": {\n        \".dropzone\": {\n            height: \"10rem\",\n            minHeight: \"unset\",\n        },\n        \".dropzone .MuiDropzonePreviewList-root\": {\n            marginLeft: \"-28px\",\n            marginTop: \"-119px\",\n        },\n    },\n    dialog: {\n        [theme.breakpoints.up(\"sm\")]: {\n            width: \"34rem\",\n        },\n    },\n    dialogcontent: {\n        height: \"23rem\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n}));\n\nconst AddSongDialog = observer(() => {\n    const {\n        applicationStore: { closeAddSongPopup, addSong },\n        spotifyStore: { playlist, search },\n    } = useStores();\n\n    const classes = useStyles();\n    const { addToast } = useToaster();\n    const screensize = useScreenSize();\n\n    const [query, setQuery] = useState(\"\");\n    const [debounceId, setDebounceId] = useState(null);\n    const [results, setResults] = useState([]);\n\n    const doSearch = (q) => {\n        setQuery(q);\n        clearTimeout(debounceId);\n        setDebounceId(\n            setTimeout(\n                () =>\n                    search(q)\n                        .then((result) => {\n                            setResults(result || []);\n                        })\n                        .catch(() => {}),\n                500\n            )\n        );\n    };\n\n    return (\n        <Dialog\n            onClose={() => {}}\n            open\n            fullScreen={screensize === \"mobile\"}\n            classes={{ paper: classes.dialog }}\n        >\n            <DialogTitle>\n                Add song to playlist: {playlist?.title || \"\"}\n            </DialogTitle>\n            <DialogContent className={classes.dialogcontent}>\n                <div style={{ flex: \"0 0 auto\" }}>\n                    <TextField\n                        fullWidth\n                        variant=\"outlined\"\n                        label={\"Search\"}\n                        onChange={(e) => {\n                            doSearch(e.target.value);\n                        }}\n                        value={query}\n                    />\n                </div>\n                <div style={{ overflow: \"auto\", flex: \"1 1 auto\" }}>\n                    <List>\n                        {results.map((song, index) => (\n                            <div key={song?.id || index}>\n                                <ListItem\n                                    alignItems=\"flex-start\"\n                                    className={classes.song}\n                                >\n                                    <ListItemAvatar>\n                                        <Avatar alt=\"\" src={song?.img || \"\"} />\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={song?.title || \"\"}\n                                        secondary={\n                                            <>\n                                                {song?.artists?.join(\", \") ||\n                                                    \"\"}\n                                            </>\n                                        }\n                                    />\n                                    <ListItemSecondaryAction>\n                                        <IconButton\n                                            aria-label=\"play\"\n                                            onClick={() =>\n                                                addSong(song?.uri)\n                                                    .then(() => {\n                                                        addToast(`Song added`, {\n                                                            variant: \"success\",\n                                                        });\n                                                    })\n                                                    .catch(() => {\n                                                        addToast(\n                                                            `Something went wrong`,\n                                                            {\n                                                                variant:\n                                                                    \"error\",\n                                                            }\n                                                        );\n                                                    })\n                                            }\n                                        >\n                                            <Add />\n                                        </IconButton>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                                <Divider variant=\"inset\" component=\"li\" />\n                            </div>\n                        ))}\n                    </List>\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Button\n                            fullWidth\n                            size={\"medium\"}\n                            color={\"secondary\"}\n                            variant={\"contained\"}\n                            onClick={closeAddSongPopup}\n                        >\n                            Done\n                        </Button>\n                    </Grid>\n                </Grid>\n            </DialogActions>\n        </Dialog>\n    );\n});\n\nexport default AddSongDialog;\n","import { useSnackbar } from \"notistack\";\n\nexport function useToaster() {\n    const { enqueueSnackbar } = useSnackbar();\n\n    return {\n        addToast: (message, options) => {\n            enqueueSnackbar(message, {\n                anchorOrigin: { horizontal: \"left\", vertical: \"top\" },\n                ...(options || {}),\n            });\n        },\n    };\n}\n","import React, { useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Container,\n    Typography,\n    Grid,\n    Box,\n    Paper,\n    Tabs,\n    Tab,\n    Button,\n} from \"@material-ui/core\";\n\nimport { useStores } from \"../../stores\";\nimport MediaControlCard from \"./MediaControlCard\";\nimport Playlists from \"./Playlists\";\nimport Memories from \"./Memories\";\nimport Songs from \"./Songs\";\nimport AddSongDialog from \"../shared/AddSongDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: { flex: \"1 1 auto\", overflow: \"hidden\" },\n    box: {\n        height: \"100%\",\n        overflow: \"hidden\",\n        paddingTop: theme.spacing(3),\n    },\n    songspaper: {\n        padding: theme.spacing(3),\n        height: \"100%\",\n        overflow: \"hidden\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    gridRoot: {\n        height: \"100%\",\n        flexWrap: \"unset\",\n    },\n    flexshrink: {\n        flex: \"0 0 auto\",\n    },\n    playlistscontainer: {\n        overflow: \"hidden\",\n        flex: \"1 1 auto\",\n    },\n    songsBanner: {\n        display: \"flex\",\n        flex: \"0 0 auto\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n    },\n    tabs: {\n        flex: \"0 0 auto\",\n    },\n}));\n\nconst SongsAndMemories = observer(() => {\n    const {\n        applicationStore: { openAddSongPopup },\n        spotifyStore: { playlist },\n    } = useStores();\n\n    const classes = useStyles();\n    const [currentTab, setCurrentTab] = useState(0);\n\n    return (\n        <Paper className={classes.songspaper}>\n            <div className={classes.songsBanner}>\n                <Typography component=\"h5\" variant=\"h5\">\n                    {`${playlist?.title || \"\"}`}\n                </Typography>\n                <Button color=\"primary\" onClick={openAddSongPopup}>\n                    Add a song\n                </Button>\n            </div>\n            <Tabs\n                className={classes.tabs}\n                value={currentTab}\n                onChange={(_, tab) => setCurrentTab(tab)}\n                aria-label=\"tabs\"\n                variant=\"fullWidth\"\n            >\n                <Tab label=\"Play or queue songs\" id=\"songs\" />\n                <Tab label=\"Memories\" id=\"memories\" />\n            </Tabs>\n            {currentTab === 0 && (\n                <Songs onSelectSong={() => setCurrentTab(1)} />\n            )}\n            {currentTab === 1 && <Memories />}\n        </Paper>\n    );\n});\n\nconst Host = observer(() => {\n    const {\n        applicationStore: { popup },\n        spotifyStore: { playlist_id },\n    } = useStores();\n\n    const classes = useStyles();\n\n    return (\n        <>\n            {popup === \"addSong\" && <AddSongDialog />}\n            <Container className={classes.container}>\n                <Box className={classes.box}>\n                    <Grid\n                        container\n                        spacing={2}\n                        direction=\"column\"\n                        className={classes.gridRoot}\n                    >\n                        <Grid item xs={12} className={classes.flexshrink}>\n                            <MediaControlCard />\n                        </Grid>\n                        <Grid\n                            item\n                            xs={12}\n                            className={classes.playlistscontainer}\n                        >\n                            {playlist_id ? <SongsAndMemories /> : <Playlists />}\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Container>\n        </>\n    );\n});\n\nexport default Host;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    List,\n    ListItem,\n    ListItemAvatar,\n    Avatar,\n    ListItemText,\n    ListItemSecondaryAction,\n    IconButton,\n    Divider,\n    Typography,\n    Button,\n} from \"@material-ui/core\";\nimport { RateReview } from \"@material-ui/icons\";\nimport { observer } from \"mobx-react-lite\";\n\nimport { useStores } from \"../../stores\";\n\nconst useStyles = makeStyles((theme) => ({\n    songs: {\n        overflow: \"scroll\",\n        width: \"100%\",\n        flex: \"1 1 auto\",\n    },\n    song: {\n        cursor: \"pointer\",\n        \"&:hover\": {\n            background: theme.palette.background.default,\n        },\n    },\n}));\n\nconst Songs = observer(() => {\n    const {\n        applicationStore: { openAddMemoryPopup, openAddSongPopup },\n        spotifyStore: { songs, playlist },\n    } = useStores();\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <div\n                style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                }}\n            >\n                <div>&nbsp;</div>\n                <Button color=\"primary\" onClick={openAddSongPopup}>\n                    Add a song\n                </Button>\n            </div>\n            <List className={classes.songs}>\n                <Typography component=\"h5\" variant=\"h5\">\n                    {`${playlist?.title || \"\"}`}\n                </Typography>\n                {songs.map((song, index) => (\n                    <div key={song?.id || index}>\n                        <ListItem\n                            alignItems=\"flex-start\"\n                            className={classes.song}\n                        >\n                            <ListItemAvatar>\n                                <Avatar alt=\"\" src={song?.img || \"\"} />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={song?.title || \"\"}\n                                secondary={\n                                    <>{song?.artists?.join(\", \") || \"\"}</>\n                                }\n                            />\n                            <ListItemSecondaryAction>\n                                <IconButton\n                                    aria-label=\"add-memory\"\n                                    onClick={() => openAddMemoryPopup(song?.id)}\n                                >\n                                    <RateReview />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        <Divider variant=\"inset\" component=\"li\" />\n                    </div>\n                ))}\n            </List>\n        </>\n    );\n});\n\nexport default Songs;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Grid,\n    DialogTitle,\n    DialogContent,\n    TextField,\n    DialogActions,\n    Button,\n    Dialog,\n} from \"@material-ui/core\";\nimport { observer } from \"mobx-react-lite\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\n\nimport { useStores } from \"../../stores\";\nimport { useScreenSize } from \"../../hooks/screensize\";\n\nconst useStyles = makeStyles((theme) => ({\n    \"@global\": {\n        \".dropzone\": {\n            height: \"10rem\",\n            minHeight: \"unset\",\n        },\n        \".dropzone .MuiDropzonePreviewList-root\": {\n            marginLeft: \"-28px\",\n            marginTop: \"-119px\",\n        },\n    },\n    dialog: {\n        [theme.breakpoints.up(\"sm\")]: {\n            width: \"34rem\",\n        },\n    },\n    dialogcontent: {\n        height: \"23rem\",\n    },\n}));\n\nconst AddMemoryDialog = observer(() => {\n    const {\n        applicationStore: { selectedSong, closeAddMemoryPopup, addMemory },\n    } = useStores();\n\n    const classes = useStyles();\n    const screensize = useScreenSize();\n\n    const [memory, setMemory] = useState({});\n\n    const handleFiles = async (files) => {\n        const [file] = files;\n        if (!file) return;\n        setMemory({ ...memory, file });\n    };\n\n    return (\n        <Dialog\n            onClose={() => {}}\n            open\n            fullScreen={screensize === \"mobile\"}\n            classes={{ paper: classes.dialog }}\n        >\n            <DialogTitle>\n                Add memory to song: {selectedSong?.title || \"\"}\n            </DialogTitle>\n            <DialogContent className={classes.dialogcontent}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <TextField\n                            fullWidth\n                            variant=\"outlined\"\n                            multiline\n                            rows={7}\n                            label={\"Memory\"}\n                            onChange={(e) => {\n                                setMemory({\n                                    ...memory,\n                                    text: `${e.target.value}`.substr(0, 300),\n                                });\n                            }}\n                            value={memory?.text || \"\"}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <DropzoneArea\n                            dropzoneClass=\"dropzone\"\n                            onChange={handleFiles}\n                            filesLimit={1}\n                            acceptedFiles={[\"image/*\"]}\n                            dropzoneText=\"Upload an image\"\n                            showAlerts={false}\n                        />\n                    </Grid>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <Button\n                            fullWidth\n                            size={\"medium\"}\n                            color={\"secondary\"}\n                            variant={\"contained\"}\n                            onClick={closeAddMemoryPopup}\n                        >\n                            Cancel\n                        </Button>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Button\n                            fullWidth\n                            disabled={\n                                !memory?.file || memory?.text?.length < 10\n                            }\n                            size={\"medium\"}\n                            color={\"primary\"}\n                            variant={\"contained\"}\n                            onClick={() => {\n                                addMemory(memory);\n                                closeAddMemoryPopup();\n                            }}\n                        >\n                            Send\n                        </Button>\n                    </Grid>\n                </Grid>\n            </DialogActions>\n        </Dialog>\n    );\n});\n\nexport default AddMemoryDialog;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    noplaylist: {\n        height: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n}));\n\nconst NoPlaylist = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.noplaylist}>\n            <Typography variant=\"subtitle1\">\n                The host is still choosing a playlist\n            </Typography>\n        </div>\n    );\n};\n\nexport default NoPlaylist;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container, Grid, Box, Paper } from \"@material-ui/core\";\nimport { observer } from \"mobx-react-lite\";\n\nimport { useStores } from \"../../stores\";\nimport Songs from \"./Songs\";\nimport AddMemoryDialog from \"./AddMemoryDialog\";\nimport AddSongDialog from \"../shared/AddSongDialog\";\nimport NoPlaylist from \"./NoPlaylist\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        flex: \"1 1 auto\",\n        overflow: \"hidden\",\n    },\n    box: {\n        height: \"100%\",\n        overflow: \"hidden\",\n        paddingTop: theme.spacing(3),\n    },\n    gridRoot: {\n        height: \"100%\",\n        flexWrap: \"unset\",\n    },\n    songscontainer: {\n        overflow: \"hidden\",\n        flex: \"1 1 auto\",\n    },\n    songspaper: {\n        padding: theme.spacing(3),\n        height: \"100%\",\n        overflow: \"hidden\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    songs: {\n        overflow: \"scroll\",\n        width: \"100%\",\n        flex: \"1 1 auto\",\n    },\n    song: {\n        cursor: \"pointer\",\n        \"&:hover\": {\n            background: theme.palette.background.default,\n        },\n    },\n    noplaylist: {\n        height: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    dialog: {\n        [theme.breakpoints.up(\"sm\")]: {\n            width: \"34rem\",\n        },\n    },\n    dialogcontent: {\n        height: \"23rem\",\n    },\n    dropzone: {\n        height: \"6rem\",\n    },\n}));\n\nconst Guest = observer(() => {\n    const {\n        applicationStore: { popup },\n        spotifyStore: { songs },\n    } = useStores();\n\n    const classes = useStyles();\n\n    return (\n        <>\n            {popup === \"addMemory\" && <AddMemoryDialog />}\n            {popup === \"addSong\" && <AddSongDialog />}\n            <Container className={classes.container}>\n                <Box className={classes.box}>\n                    <Grid\n                        container\n                        spacing={2}\n                        direction=\"column\"\n                        className={classes.gridRoot}\n                    >\n                        <Grid item xs={12} className={classes.songscontainer}>\n                            <Paper className={classes.songspaper}>\n                                {songs?.length ? <Songs /> : <NoPlaylist />}\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Container>\n        </>\n    );\n});\n\nexport default Guest;\n","import React, { useEffect } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Helmet } from \"react-helmet\";\n\nimport { useStores } from \"../../stores\";\n\nimport LandingPage from \"./LandingPage\";\nimport Navbar from \"./Navbar\";\nimport Host from \"../host\";\nimport Guest from \"../guest\";\n\nconst App = observer(() => {\n    const {\n        applicationStore: { initialize, nav },\n    } = useStores();\n\n    useEffect(() => {\n        initialize();\n    }, [initialize]);\n\n    return (\n        <div\n            style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                position: \"absolute\",\n                left: 0,\n                right: 0,\n                top: 0,\n                bottom: 0,\n                overflow: \"hidden\",\n            }}\n        >\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <meta name=\"theme-color\" content=\"#237fb1\" />\n\n                <title>Playlist Memories</title>\n            </Helmet>\n            {nav !== \"landing_page\" && <Navbar />}\n            {nav === \"landing_page\" && <LandingPage />}\n            {nav === \"host\" && <Host />}\n            {nav === \"guest\" && <Guest />}\n        </div>\n    );\n});\n\nexport default App;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n    palette: {\n        type: \"light\",\n        primary: {\n            main: \"#5F4B8BFF\",\n            contrastText: \"#fefefe\",\n        },\n        secondary: {\n            main: \"#E69A8DFF\",\n            contrastText: \"#fefefe\",\n        },\n        red: {\n            main: \"#ff0000\",\n        },\n        error: {\n            main: \"#ab3030\",\n        },\n        background: {\n            default: \"#f0f0f0\",\n        },\n    },\n});\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { SnackbarProvider } from \"notistack\";\n\nimport Main from \"./views/shared/Main\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <SnackbarProvider maxSnack={3}>\n            <Main />\n        </SnackbarProvider>\n    </ThemeProvider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}