{"version":3,"sources":["stores/application.js","stores/spotify.js","apis/spotify.js","stores/index.jsx","apis/backend.js","hooks/screensize.js","views/LandingPage.jsx","views/Navbar.jsx","views/Host.jsx","views/Guest.jsx","views/Main.jsx","theme.jsx","index.js"],"names":["ApplicationStore","api","spotifyStore","hostOrGuest","room","username","memories","socket","guests","songIdForMemory","popup","autoBind","this","authCode","search","window","location","href","includes","code","split","history","replaceState","origin","getSpotifyAuthCode","createRoom","getSocket","onopen","sendMessage","onmessage","e","message","JSON","parse","data","console","log","handleMessage","action","initialize","message_data","isHost","handleMessageFromGuest","isGuest","handleMessageFromHost","count","Number","getMemories","reload","playlist_id","setPlaylist","args","send","stringify","from","close","room_code","localStorage","getItem","room_name","name","removeItem","initializeSocket","Math","floor","random","setItem","oauth","redirect","getRoom","songId","text","file","saveMemory","song_id","user","filename","upload_url","saveMemoryImage","memory_id","deleteMemory","filter","memory","pk","songs","find","song","id","decorate","observable","leaveRoom","openAddMemoryPopup","closeAddMemoryPopup","setSelectedSong","nav","computed","selectedSong","SpotifyStore","spotify_api","a","token","access_token","preparePlayer","getPlaylists","Promise","resolve","reject","onSpotifyWebPlaybackSDKReady","startPlayer","document","getElementById","script","createElement","type","async","defer","src","onload","onerror","error","Error","head","appendChild","player","Spotify","Player","getOAuthToken","cb","volume","addListener","device_id","player_state","connect","playlists","getSongs","playSong","uri","queueSong","togglePlayback","playback","paused","nextSong","next","setCurrentSong","track_window","current_track","playlist","setSong","goBack","current_song","SpotifyApi","superagent","put","base","set","Authorization","query","uris","post","WebSocket","env","NODE_ENV","BACKEND_BASE_DEV","BACKEND_BASE_PRD","get","response","body","delete","PROTOCOL_DEV","PROTOCOL_PRD","applicationStore","context","createContext","useStores","useContext","useScreenSize","isLarge","useMediaQuery","minWidth","isMedium","isSmall","useStyles","makeStyles","theme","dialog","breakpoints","up","width","height","Initial","onCreate","onJoin","DialogTitle","DialogContent","DialogActions","Grid","container","spacing","item","xs","Button","fullWidth","size","color","variant","onClick","Create","onGoBack","useState","setName","TextField","label","onChange","target","value","disabled","Join","setUser","setCode","length","LandingPage","observer","generateRoom","joinRoom","classes","screensize","stage","setStage","Dialog","onClose","open","fullScreen","paper","grow","flexGrow","appbar","flex","chip","marginRight","Navbar","closeRoom","anchorEl","setAnchorEl","AppBar","position","className","Toolbar","Chip","icon","Room","AccountCircle","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","Boolean","MenuItem","overflow","box","paddingTop","padding","songspaper","display","flexDirection","root","details","content","cover","controls","alignItems","paddingLeft","paddingBottom","playIcon","gridRoot","flexWrap","flexshrink","playlistscontainer","cursor","background","palette","default","tabs","card","overflowY","marginTop","image","selectedSongText","MediaControlCard","Card","CardContent","Typography","component","title","artists","join","IconButton","aria-label","PlayArrow","Pause","SkipNext","CardMedia","img","Playlists","Paper","List","map","index","ListItem","ListItemAvatar","Avatar","alt","ListItemText","primary","secondary","owner","ListItemSecondaryAction","Divider","Memories","song_memories","avatar","onDelete","CardActionArea","square","downloadUrl","gutterBottom","CardActions","Songs","onSelectSong","Queue","SongsAndMemories","currentTab","setCurrentTab","Tabs","_","tab","Tab","Host","Container","Box","direction","minHeight","marginLeft","songscontainer","noplaylist","justifyContent","dialogcontent","dropzone","RateReview","NoPlaylist","AddMemoryDialog","addMemory","setMemory","handleFiles","files","multiline","rows","substr","dropzoneClass","filesLimit","acceptedFiles","dropzoneText","Guest","App","useEffect","style","Helmet","charSet","createMuiTheme","main","contrastText","red","ReactDOM","render","ThemeProvider","CssBaseline","maxSnack","Main"],"mappings":"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","file":"static/js/main.a8a401b1.chunk.js","sourcesContent":["import { observable, action, decorate, computed } from \"mobx\";\nimport autoBind from \"auto-bind\";\n\nconst generateRoomCode = () => Math.floor(Math.random() * 90000) + 10000;\n\nconst getSpotifyAuthCode = () => {\n    const search = window.location.href;\n    if (!search.includes(\"?code\")) return;\n    const code = search.split(\"?code=\")[1];\n    window.history.replaceState({}, \"\", window.location.origin);\n    return code;\n};\n\nexport class ApplicationStore {\n    api = null;\n    spotifyStore = null;\n    hostOrGuest = null;\n    room = null;\n    username = null;\n    memories = [];\n    socket = null;\n    guests = 0;\n    songIdForMemory = null;\n    popup = null;\n\n    constructor(api, spotifyStore) {\n        autoBind(this);\n        this.api = api;\n        this.spotifyStore = spotifyStore;\n    }\n\n    initialize() {\n        const authCode = getSpotifyAuthCode();\n        if (authCode) {\n            this.createRoom(authCode);\n        }\n    }\n\n    initializeSocket() {\n        this.socket = this.api.getSocket();\n\n        this.socket.onopen = () => {\n            this.sendMessage(\"SET_CLIENT_META\", {\n                room: this.room.code,\n                hostOrGuest: this.hostOrGuest,\n            });\n        };\n        this.socket.onmessage = (e) => {\n            const message = JSON.parse(e.data);\n            console.log(\"Received: '\" + e.data + \"'\");\n            this.handleMessage(message.action, message);\n        };\n\n        this.spotifyStore.initialize(this.room, this.hostOrGuest, this.socket);\n    }\n\n    handleMessage(action, message_data) {\n        if (this.isHost) {\n            this.handleMessageFromGuest(action, message_data);\n        }\n        if (this.isGuest) {\n            this.handleMessageFromHost(action, message_data);\n        }\n    }\n\n    handleMessageFromGuest(action, message_data) {\n        if (action === \"UPDATE_GUEST_COUNT\") {\n            const { count } = message_data;\n            this.guests = Number(count);\n        }\n        if (action === \"NEW_MEMORY\") {\n            this.getMemories();\n        }\n    }\n\n    handleMessageFromHost(action, message_data) {\n        if (action === \"ROOM_CLOSED\") {\n            window.location.reload();\n        }\n        if (action === \"PLAYLIST_SET\") {\n            const { playlist_id } = message_data;\n            this.spotifyStore.setPlaylist(playlist_id);\n        }\n    }\n\n    sendMessage(action, args = {}) {\n        this.socket.send(\n            JSON.stringify({\n                action,\n                from: this.hostOrGuest,\n                ...args,\n            })\n        );\n    }\n\n    get nav() {\n        if (!this.hostOrGuest) return \"landing_page\";\n        if (this.hostOrGuest === \"host\") return \"host\";\n        return \"guest\";\n    }\n\n    leaveRoom() {\n        this.room = null;\n        this.username = null;\n        this.hostOrGuest = null;\n        this.socket?.close();\n        this.socket = null;\n    }\n\n    async closeRoom() {\n        window.location.reload();\n    }\n\n    async createRoom(code) {\n        let room;\n        const room_code = window.localStorage.getItem(\"code\");\n        const room_name = window.localStorage.getItem(\"name\");\n        try {\n            room = await this.api.createRoom({\n                code,\n                room: { code: room_code, name: room_name },\n            });\n        } catch (e) {\n            console.log(\"🧙‍♂️\", e);\n        }\n\n        window.localStorage.removeItem(\"code\");\n        window.localStorage.removeItem(\"name\");\n        if (!room) {\n            this.room = null;\n            this.hostOrGuest = null;\n            return;\n        }\n\n        this.room = room;\n        this.hostOrGuest = \"host\";\n\n        this.initializeSocket();\n    }\n\n    async generateRoom(name) {\n        const code = generateRoomCode();\n        window.localStorage.setItem(\"name\", name);\n        window.localStorage.setItem(\"code\", code);\n        const redirect = await this.api.oauth();\n        window.location = redirect;\n    }\n\n    async joinRoom(username, code) {\n        let room;\n        try {\n            room = await this.api.getRoom({\n                code,\n            });\n        } catch (e) {\n            console.log(\"🧙‍♂️\", e);\n        }\n        this.room = room;\n        this.username = username;\n        this.hostOrGuest = \"guest\";\n\n        this.initializeSocket();\n    }\n\n    openAddMemoryPopup(songId) {\n        this.songIdForMemory = songId;\n        this.popup = \"addMemory\";\n    }\n\n    closeAddMemoryPopup() {\n        this.popup = null;\n        this.songIdForMemory = null;\n    }\n\n    async addMemory({ text, file }) {\n        try {\n            const upload_url = await this.api.saveMemory({\n                room_code: this.room.code,\n                song_id: this.songIdForMemory,\n                user: this.username,\n                text,\n                filename: file.name,\n            });\n            await this.api.saveMemoryImage({\n                upload_url,\n                file,\n            });\n            this.sendMessage(\"NEW_MEMORY\");\n        } catch (e) {\n            console.log(\"🧙‍♂️\", e);\n        }\n    }\n\n    async deleteMemory(memory_id) {\n        try {\n            await this.api.deleteMemory({\n                room_code: this.room.code,\n                memory_id,\n            });\n            this.memories = this.memories.filter(\n                (memory) => memory?.pk !== memory_id\n            );\n        } catch (e) {\n            console.log(\"🧙‍♂️\", e);\n        }\n    }\n\n    async getMemories() {\n        try {\n            this.memories = await this.api.getMemories({\n                room_code: this.room.code,\n            });\n            console.log(JSON.parse(JSON.stringify(this.memories)));\n        } catch (e) {\n            console.log(\"🧙‍♂️\", e);\n        }\n    }\n\n    get isHost() {\n        return this.hostOrGuest === \"host\";\n    }\n\n    get isGuest() {\n        return this.hostOrGuest === \"guest\";\n    }\n\n    get selectedSong() {\n        const current_track = this.spotifyStore.songs.find(\n            (song) => song.id === this.songIdForMemory\n        );\n        return current_track;\n    }\n\n    setSelectedSong(song_id) {\n        this.songIdForMemory = song_id;\n    }\n}\n\ndecorate(ApplicationStore, {\n    hostOrGuest: observable,\n    username: observable,\n    room: observable,\n    guests: observable,\n    memories: observable,\n    songIdForMemory: observable,\n    popup: observable,\n    initialize: action,\n    createRoom: action,\n    leaveRoom: action,\n    openAddMemoryPopup: action,\n    closeAddMemoryPopup: action,\n    deleteMemory: action,\n    setSelectedSong: action,\n    nav: computed,\n    isHost: computed,\n    isGuest: computed,\n    selectedSong: computed,\n});\n","import { observable, action, computed, decorate } from \"mobx\";\n\nexport class SpotifyStore {\n    constructor(api, spotify_api) {\n        this.api = api;\n        this.spotify_api = spotify_api;\n\n        // initialize data\n        this.token = null;\n        this.room_code = null;\n        this.player = null;\n        this.device_id = null;\n        this.player_state = null;\n\n        // spotify data\n        this.playlists = [];\n        this.playlist_id = null;\n        this.songs = [];\n        this.song_id = null;\n\n        this.socket = null;\n        this.hostOrGuest = null;\n    }\n\n    initialize = async (room, hostOrGuest, socket) => {\n        this.token = room.access_token;\n        this.room_code = room.code;\n        this.hostOrGuest = hostOrGuest;\n        if (this.isHost) {\n            this.socket = socket;\n            this.preparePlayer();\n            this.getPlaylists();\n        }\n\n        if (this.isGuest && room.playlist_id) {\n            this.setPlaylist(room.playlist_id);\n        }\n    };\n\n    preparePlayer = () =>\n        new Promise((resolve, reject) => {\n            if (!window.onSpotifyWebPlaybackSDKReady) {\n                window.onSpotifyWebPlaybackSDKReady = this.startPlayer;\n            } else {\n                this.startPlayer();\n            }\n\n            const scriptTag = document.getElementById(\"spotify-player\");\n\n            if (!scriptTag) {\n                const script = document.createElement(\"script\");\n\n                script.id = \"spotify-player\";\n                script.type = \"text/javascript\";\n                script.async = false;\n                script.defer = true;\n                script.src = \"https://sdk.scdn.co/spotify-player.js\";\n                script.onload = () => resolve();\n                script.onerror = (error) =>\n                    reject(new Error(`loadScript: ${error.message}`));\n\n                document.head.appendChild(script);\n            } else {\n                resolve();\n            }\n        });\n\n    startPlayer = () => {\n        this.player = new window.Spotify.Player({\n            getOAuthToken: (cb) => {\n                cb(this.token);\n            },\n            name: \"Playlist Memories\",\n            volume: 1,\n        });\n\n        this.player.addListener(\"ready\", (e) => {\n            this.device_id = e.device_id;\n        });\n        this.player.addListener(\"not_ready\", (e) => {\n            console.log(\"not_ready\", e);\n        });\n        this.player.addListener(\"player_state_changed\", (player_state) => {\n            this.player_state = player_state;\n        });\n        this.player.addListener(\"initialization_error\", (error) =>\n            console.log(\"initialization_error\", error.message)\n        );\n        this.player.addListener(\"authentication_error\", (error) =>\n            console.log(\"authentication_error\", error.message)\n        );\n        this.player.addListener(\"account_error\", (error) =>\n            console.log(\"account_error\", error.message)\n        );\n        this.player.addListener(\"playback_error\", (error) =>\n            console.log(\"playback_error\", error.message)\n        );\n\n        this.player.connect();\n    };\n\n    getPlaylists = async () => {\n        try {\n            this.playlists = await this.api.getPlaylists({\n                room_code: this.room_code,\n            });\n        } catch (e) {\n            console.error(e, \"Failed to get playlists!\");\n        }\n    };\n\n    setPlaylist = async (playlist_id) => {\n        if (this.isHost) {\n            const success = await this.api.setPlaylist({\n                room_code: this.room_code,\n                playlist_id,\n            });\n            if (!success) {\n                console.log(\"👲\", \"Failed to set playlist in room!!\");\n                return;\n            }\n\n            this.sendMessage(\"PLAYLIST_SET\", { playlist_id });\n        }\n\n        this.playlist_id = playlist_id;\n        if (playlist_id) this.getSongs();\n    };\n\n    getSongs = async () => {\n        this.songs = [];\n        try {\n            this.songs = await this.api.getSongs({\n                room_code: this.room_code,\n            });\n        } catch (e) {\n            console.error(e, \"Failed to get songs!\");\n        }\n    };\n\n    playSong = async (uri) => {\n        try {\n            await this.spotify_api.playSong({\n                device_id: this.device_id,\n                token: this.token,\n                uri,\n            });\n        } catch (e) {\n            console.error(e, \"Failed to play song!\");\n        }\n    };\n\n    queueSong = async (uri) => {\n        try {\n            await this.spotify_api.queueSong({\n                device_id: this.device_id,\n                token: this.token,\n                uri,\n            });\n        } catch (e) {\n            console.error(e, \"Failed to queue song!\");\n        }\n    };\n\n    togglePlayback = async () => {\n        try {\n            await this.spotify_api.togglePlayback({\n                playback: this.paused ? \"play\" : \"pause\",\n                device_id: this.device_id,\n                token: this.token,\n            });\n        } catch (e) {\n            console.error(e, \"Failed to toggle playback!\");\n        }\n    };\n\n    nextSong = async () => {\n        try {\n            await this.spotify_api.next({\n                device_id: this.device_id,\n                token: this.token,\n            });\n        } catch (e) {\n            console.error(e, \"Failed to toggle playback!\");\n        }\n    };\n\n    setCurrentSong = (song_id) => {\n        this.player_state = {\n            track_window: { current_track: { id: song_id } },\n        };\n    };\n\n    sendMessage(action, args) {\n        this.socket.send(\n            JSON.stringify({\n                action,\n                from: this.hostOrGuest,\n                ...args,\n            })\n        );\n    }\n\n    get paused() {\n        return this.player_state?.paused ?? true;\n    }\n\n    get current_song() {\n        const current_track = this.songs.find(\n            (song) =>\n                song.id === this.player_state?.track_window?.current_track?.id\n        );\n        return current_track;\n    }\n\n    get playlist() {\n        return this.playlists?.find(\n            (playlist) => playlist?.id === this.playlist_id\n        );\n    }\n\n    get isHost() {\n        return this.hostOrGuest === \"host\";\n    }\n\n    get isGuest() {\n        return this.hostOrGuest === \"guest\";\n    }\n}\n\ndecorate(SpotifyStore, {\n    token: observable,\n    player: observable,\n    device_id: observable,\n    player_state: observable,\n    playlists: observable,\n    playlist_id: observable,\n    room_code: observable,\n    songs: observable,\n    song_id: observable,\n    initialize: action,\n    startPlayer: action,\n    getPlaylists: action,\n    setPlaylist: action,\n    getSongs: action,\n    setSong: action,\n    setCurrentSong: action,\n    goBack: action,\n    paused: computed,\n    current_song: computed,\n    isHost: computed,\n    isGuest: computed,\n});\n","import superagent from \"superagent\";\n\nclass SpotifyApi {\n    constructor() {\n        this.base = `https://api.spotify.com/v1`;\n    }\n\n    playSong = async ({ token, device_id, uri }) => {\n        await superagent\n            .put(`${this.base}/me/player/play`)\n            .set({ Authorization: `Bearer ${token}` })\n            .query({ device_id })\n            .send({ uris: [uri] });\n    };\n\n    queueSong = async ({ token, device_id, uri }) => {\n        await superagent\n            .post(`${this.base}/me/player/queue`)\n            .set({ Authorization: `Bearer ${token}` })\n            .query({ device_id, uri });\n    };\n\n    togglePlayback = async ({ token, device_id, playback }) => {\n        await superagent\n            .put(`${this.base}/me/player/${playback}`)\n            .set({ Authorization: `Bearer ${token}` })\n            .query({ device_id });\n    };\n\n    next = async ({ token, device_id }) => {\n        await superagent\n            .post(`${this.base}/me/player/next`)\n            .set({ Authorization: `Bearer ${token}` })\n            .query({ device_id });\n    };\n}\n\nexport default SpotifyApi;\n","import { createContext, useContext } from \"react\";\n\nimport { ApplicationStore } from \"../stores/application\";\nimport { SpotifyStore } from \"../stores/spotify\";\n// import PlayerService from \"../stores/player\";\nimport SpotifyApi from \"../apis/spotify\";\nimport BackendApi from \"../apis/backend\";\n\nconst api = new BackendApi();\nconst spotify_api = new SpotifyApi();\nconst spotifyStore = new SpotifyStore(api, spotify_api);\nconst applicationStore = new ApplicationStore(api, spotifyStore);\nconst context = createContext({ applicationStore, spotifyStore });\n\nexport const useStores = () => useContext(context);\n","import superagent from \"superagent\";\nimport env from \"react-dotenv\";\n\nclass BackendApi {\n    constructor() {\n        this.base =\n            env.NODE_ENV === \"development\"\n                ? `${env.PROTOCOL_DEV}://${env.BACKEND_BASE_DEV}`\n                : `${env.PROTOCOL_PRD}://${env.BACKEND_BASE_PRD}`;\n    }\n\n    getSocket = () =>\n        new WebSocket(\n            `ws://${\n                env.NODE_ENV === \"development\"\n                    ? env.BACKEND_BASE_DEV\n                    : env.BACKEND_BASE_PRD\n            }`\n        );\n\n    oauth = async () => {\n        try {\n            const response = await superagent.get(`${this.base}/authorize`);\n            return response?.text;\n        } catch (e) {\n            console.log(\"👑\", e);\n        }\n    };\n\n    getRoom = async ({ code }) => {\n        try {\n            const response = await superagent.get(`${this.base}/room/${code}`);\n            return response?.body?.room;\n        } catch (e) {\n            console.log(\"🦸‍♂️\", e);\n        }\n    };\n\n    createRoom = async ({ room, code }) => {\n        try {\n            const response = await superagent\n                .post(`${this.base}/room`)\n                .send({ room, code });\n            return response?.body?.room;\n        } catch (e) {\n            console.log(\"👨‍👨‍👦‍👦\", e);\n        }\n    };\n\n    getPlaylists = async ({ room_code }) => {\n        try {\n            const response = await superagent.get(\n                `${this.base}/room/${room_code}/playlists`\n            );\n            return response.body || [];\n        } catch (e) {\n            console.log(\"👁\", e);\n        }\n    };\n\n    setPlaylist = async ({ room_code, playlist_id }) => {\n        try {\n            await superagent\n                .put(`${this.base}/room/${room_code}/playlist`)\n                .send({ playlist_id });\n            return true;\n        } catch (e) {\n            console.log(\"👁\", e);\n            return false;\n        }\n    };\n\n    getSongs = async ({ room_code }) => {\n        try {\n            const response = await superagent.get(\n                `${this.base}/room/${room_code}/songs`\n            );\n            return response?.body || [];\n        } catch (e) {\n            console.log(\"👂\", e);\n        }\n    };\n\n    getMemories = async ({ room_code }) => {\n        try {\n            const response = await superagent.get(\n                `${this.base}/room/${room_code}/memories`\n            );\n            return response?.body || [];\n        } catch (e) {\n            console.log(\"🙏\", e);\n        }\n    };\n\n    saveMemory = async ({ room_code, song_id, ...data }) => {\n        try {\n            const response = await superagent\n                .put(`${this.base}/room/${room_code}/memories`)\n                .send({ ...data, song_id });\n            return response?.body?.upload_url;\n        } catch (e) {\n            console.log(\"🙏\", e);\n        }\n    };\n\n    saveMemoryImage = async ({ file, upload_url }) => {\n        try {\n            await superagent\n                .put(upload_url)\n                .set(\"Content-Type\", file.type)\n                .send(file);\n            return true;\n        } catch (e) {\n            console.log(\"🙏\", e.response);\n        }\n    };\n\n    deleteMemory = async ({ room_code, memory_id }) => {\n        try {\n            await superagent.delete(\n                `${this.base}/room/${room_code}/memories/${memory_id}`\n            );\n            return true;\n        } catch (e) {\n            console.log(\"🙏\", e);\n        }\n    };\n}\n\nexport default BackendApi;\n","import { useMediaQuery } from \"react-responsive\";\n\nexport const useScreenSize = () => {\n    const isLarge = useMediaQuery({ minWidth: 1280 });\n    const isMedium = useMediaQuery({ minWidth: 960 });\n    const isSmall = useMediaQuery({ minWidth: 600 });\n\n    if (isLarge) return \"large\";\n    if (isMedium) return \"medium\";\n    if (isSmall) return \"small\";\n    return \"mobile\";\n};\n","import React, { useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Button } from \"@material-ui/core\";\nimport { Grid, TextField } from \"@material-ui/core\";\n\nimport { useStores } from \"../stores\";\nimport { useScreenSize } from \"../hooks/screensize\";\n\n// import Spotify from \"./Spotify\";\n// import Memories from \"./Memories\";\n\nconst useStyles = makeStyles((theme) => ({\n    dialog: {\n        [theme.breakpoints.up(\"sm\")]: {\n            width: \"34rem\",\n            height: \"15rem\",\n        },\n    },\n}));\n\nconst Initial = ({ onCreate, onJoin }) => {\n    return (\n        <>\n            <DialogTitle>Playlist Memories</DialogTitle>\n            <DialogContent>\n                Share the memories you've made with a song from your favorite\n                playlist!\n            </DialogContent>\n            <DialogActions>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <Button\n                            fullWidth\n                            size={\"medium\"}\n                            color={\"primary\"}\n                            variant={\"contained\"}\n                            onClick={onCreate}\n                        >\n                            Create room\n                        </Button>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Button\n                            fullWidth\n                            size={\"medium\"}\n                            color={\"primary\"}\n                            variant={\"contained\"}\n                            onClick={onJoin}\n                        >\n                            Join room\n                        </Button>\n                    </Grid>\n                </Grid>\n            </DialogActions>\n        </>\n    );\n};\n\nconst Create = ({ onCreate, onGoBack }) => {\n    const [name, setName] = useState(\"\");\n    return (\n        <>\n            <DialogTitle>Create room</DialogTitle>\n            <DialogContent>\n                <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    size={\"small\"}\n                    label={\"Room name\"}\n                    onChange={(e) => {\n                        setName(e.target.value);\n                    }}\n                    value={name}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <Button\n                            fullWidth\n                            size={\"medium\"}\n                            color={\"secondary\"}\n                            variant={\"contained\"}\n                            onClick={onGoBack}\n                        >\n                            Go back\n                        </Button>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Button\n                            fullWidth\n                            size={\"medium\"}\n                            color={\"primary\"}\n                            variant={\"contained\"}\n                            disabled={!name}\n                            onClick={() => {\n                                onCreate(name);\n                            }}\n                        >\n                            Create room\n                        </Button>\n                    </Grid>\n                </Grid>\n            </DialogActions>\n        </>\n    );\n};\n\nconst Join = ({ onJoin, onGoBack }) => {\n    const [user, setUser] = useState(\"\");\n    const [code, setCode] = useState(\"\");\n    return (\n        <>\n            <DialogTitle>Join room</DialogTitle>\n            <DialogContent>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <TextField\n                            fullWidth\n                            variant=\"outlined\"\n                            size={\"small\"}\n                            label={\"Username\"}\n                            onChange={(e) => {\n                                setUser(e.target.value);\n                            }}\n                            value={user}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            fullWidth\n                            variant=\"outlined\"\n                            size={\"small\"}\n                            label={\"Room code\"}\n                            onChange={(e) => {\n                                setCode(e.target.value);\n                            }}\n                            value={code}\n                        />\n                    </Grid>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <Button\n                            fullWidth\n                            size={\"medium\"}\n                            color={\"secondary\"}\n                            variant={\"contained\"}\n                            onClick={onGoBack}\n                        >\n                            Go back\n                        </Button>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Button\n                            fullWidth\n                            size={\"medium\"}\n                            color={\"primary\"}\n                            variant={\"contained\"}\n                            disabled={!user || code?.length !== 5}\n                            onClick={() => {\n                                onJoin(user, code);\n                            }}\n                        >\n                            Join room\n                        </Button>\n                    </Grid>\n                </Grid>\n            </DialogActions>\n        </>\n    );\n};\n\nconst LandingPage = observer(() => {\n    const {\n        applicationStore: { generateRoom, joinRoom },\n    } = useStores();\n\n    const classes = useStyles();\n    const screensize = useScreenSize();\n    const [stage, setStage] = useState(\"initial\");\n\n    return (\n        <Dialog\n            onClose={() => {}}\n            open\n            fullScreen={screensize === \"mobile\"}\n            classes={{ paper: classes.dialog }}\n        >\n            {stage === \"initial\" && (\n                <Initial\n                    onCreate={() => setStage(\"create\")}\n                    onJoin={() => setStage(\"join\")}\n                />\n            )}\n            {stage === \"create\" && (\n                <Create\n                    onCreate={(name) => generateRoom(name)}\n                    onGoBack={() => setStage(\"initial\")}\n                />\n            )}\n            {stage === \"join\" && (\n                <Join\n                    onJoin={(user, code) => joinRoom(user, code)}\n                    onGoBack={() => setStage(\"initial\")}\n                />\n            )}\n        </Dialog>\n    );\n});\n\nexport default LandingPage;\n","import React, { useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Menu, MenuItem, Chip } from \"@material-ui/core\";\nimport { AccountCircle, Room } from \"@material-ui/icons\";\n\nimport { useStores } from \"../stores\";\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    appbar: {\n        flex: \"0 0 auto\",\n    },\n    chip: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst Navbar = observer(() => {\n    const {\n        applicationStore: { nav, username, leaveRoom, closeRoom, room, guests },\n    } = useStores();\n\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    return (\n        <AppBar position=\"static\" className={classes.appbar}>\n            <Toolbar>\n                <Chip\n                    icon={<Room />}\n                    label={`${room?.name}`}\n                    className={classes.chip}\n                />\n                {nav === \"guest\" && (\n                    <Chip\n                        icon={<AccountCircle />}\n                        label={`${username}`}\n                        className={classes.chip}\n                    />\n                )}\n                {nav === \"host\" && (\n                    <Chip\n                        icon={<AccountCircle />}\n                        label={`${guests}`}\n                        className={classes.chip}\n                    />\n                )}\n                <div className={classes.grow} />\n                {room && (\n                    <>\n                        <Button\n                            color=\"inherit\"\n                            aria-controls=\"simple-menu\"\n                            aria-haspopup=\"true\"\n                            onClick={(event) =>\n                                setAnchorEl(event.currentTarget)\n                            }\n                        >\n                            Code: {room.code}\n                        </Button>\n                        <Menu\n                            anchorEl={anchorEl}\n                            keepMounted\n                            open={Boolean(anchorEl)}\n                            onClose={() => setAnchorEl(null)}\n                        >\n                            <MenuItem\n                                onClick={\n                                    nav === \"guest\" ? leaveRoom : closeRoom\n                                }\n                            >\n                                {nav === \"guest\" ? \"Leave\" : \"Close\"} room\n                            </MenuItem>\n                        </Menu>\n                    </>\n                )}\n            </Toolbar>\n        </AppBar>\n    );\n});\n\nexport default Navbar;\n","import React, { useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Container,\n    Card,\n    CardActionArea,\n    CardActions,\n    CardContent,\n    Typography,\n    IconButton,\n    CardMedia,\n    Grid,\n    Box,\n    Paper,\n    List,\n    ListItem,\n    ListItemAvatar,\n    Avatar,\n    ListItemText,\n    Divider,\n    ListItemSecondaryAction,\n    Button,\n    Tabs,\n    Tab,\n    Chip,\n} from \"@material-ui/core\";\nimport { SkipNext, PlayArrow, Pause, Queue } from \"@material-ui/icons\";\nimport { useStores } from \"../stores\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: { flex: \"1 1 auto\", overflow: \"hidden\" },\n    box: {\n        height: \"100%\",\n        overflow: \"hidden\",\n        paddingTop: theme.spacing(3),\n    },\n    paper: { padding: theme.spacing(3), height: \"100%\", overflow: \"hidden\" },\n    songspaper: {\n        padding: theme.spacing(3),\n        height: \"100%\",\n        overflow: \"hidden\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    root: {\n        display: \"flex\",\n        flexGrow: \"1\",\n    },\n    details: {\n        display: \"flex\",\n        flex: \"1 1 auto\",\n        flexDirection: \"column\",\n    },\n    content: {\n        flex: \"1 0 auto\",\n    },\n    cover: {\n        width: 151,\n    },\n    controls: {\n        display: \"flex\",\n        alignItems: \"center\",\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    playIcon: {\n        height: 38,\n        width: 38,\n    },\n    gridRoot: {\n        height: \"100%\",\n        flexWrap: \"unset\",\n    },\n    flexshrink: {\n        flex: \"0 0 auto\",\n    },\n    playlistscontainer: {\n        overflow: \"hidden\",\n        flex: \"1 1 auto\",\n    },\n    playlists: {\n        width: \"100%\",\n        height: \"100%\",\n        overflow: \"scroll\",\n    },\n    playlist: {\n        cursor: \"pointer\",\n        \"&:hover\": {\n            background: theme.palette.background.default,\n        },\n    },\n    songs: {\n        overflow: \"scroll\",\n        width: \"100%\",\n        flex: \"1 1 auto\",\n    },\n    tabs: {\n        flex: \"0 0 auto\",\n    },\n    song: {\n        cursor: \"pointer\",\n        \"&:hover\": {\n            background: theme.palette.background.default,\n        },\n    },\n    card: {\n        background: \"#f0f0f0\",\n        height: \"100%\",\n    },\n    memories: {\n        overflowY: \"auto\",\n        marginTop: \".5rem\",\n    },\n    image: {\n        height: \"10rem\",\n    },\n    selectedSong: { marginTop: \".5rem\" },\n    selectedSongText: { marginRight: \".5rem\" },\n}));\n\nconst MediaControlCard = observer(() => {\n    const classes = useStyles();\n\n    const {\n        spotifyStore: { paused, current_song, togglePlayback, nextSong },\n    } = useStores();\n\n    return !current_song ? null : (\n        <Card className={classes.root}>\n            <div className={classes.details}>\n                <CardContent className={classes.content}>\n                    <Typography component=\"h5\" variant=\"h5\">\n                        {current_song?.title || \"\"}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                        {current_song?.artists?.join(\", \") || \"\"}\n                    </Typography>\n                </CardContent>\n                <div className={classes.controls}>\n                    <IconButton\n                        aria-label=\"play/pause\"\n                        disabled={!current_song}\n                        onClick={togglePlayback}\n                    >\n                        {paused ? (\n                            <PlayArrow className={classes.playIcon} />\n                        ) : (\n                            <Pause className={classes.playIcon} />\n                        )}\n                    </IconButton>\n                    <IconButton\n                        aria-label=\"next\"\n                        disabled={!current_song}\n                        onClick={nextSong}\n                    >\n                        <SkipNext />\n                    </IconButton>\n                </div>\n            </div>\n            <CardMedia\n                className={classes.cover}\n                image={current_song?.img || \"\"}\n                title=\"Album cover\"\n            />\n        </Card>\n    );\n});\n\nconst Playlists = observer(() => {\n    const {\n        spotifyStore: { playlists, setPlaylist },\n    } = useStores();\n\n    const classes = useStyles();\n\n    return (\n        <Paper className={classes.paper}>\n            <List className={classes.playlists}>\n                {playlists.map((playlist, index) => (\n                    <div key={playlist?.id || index}>\n                        <ListItem\n                            alignItems=\"flex-start\"\n                            className={classes.playlist}\n                        >\n                            <ListItemAvatar>\n                                <Avatar alt=\"\" src={playlist?.img || \"\"} />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={playlist?.title || \"\"}\n                                secondary={<>{playlist?.owner || \"\"}</>}\n                            />\n                            <ListItemSecondaryAction>\n                                <Button\n                                    color=\"primary\"\n                                    onClick={() => setPlaylist(playlist?.id)}\n                                >\n                                    Select\n                                </Button>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        <Divider variant=\"inset\" component=\"li\" />\n                    </div>\n                ))}\n            </List>\n        </Paper>\n    );\n});\n\nconst Memories = observer(() => {\n    const {\n        applicationStore: {\n            memories,\n            deleteMemory,\n            selectedSong,\n            setSelectedSong,\n        },\n        spotifyStore: { current_song },\n    } = useStores();\n\n    const classes = useStyles();\n\n    const song_memories = memories.filter(\n        (memory) => memory.song_id === (selectedSong?.id || current_song?.id)\n    );\n\n    return (\n        <div>\n            <div>\n                {selectedSong ? (\n                    <Grid container className={classes.selectedSong}>\n                        <Typography\n                            variant=\"h5\"\n                            className={classes.selectedSongText}\n                        >\n                            Memories for selected song:{\" \"}\n                        </Typography>\n                        <Chip\n                            color=\"secondary\"\n                            label={selectedSong?.title || \"Selected song\"}\n                            avatar={<Avatar>S</Avatar>}\n                            onDelete={() => {\n                                setSelectedSong();\n                            }}\n                        />\n                    </Grid>\n                ) : (\n                    <Typography\n                        variant=\"h5\"\n                        className={classes.selectedSong}\n                    >{`Memories for current song: ${\n                        current_song?.title || \"-\"\n                    }`}</Typography>\n                )}\n            </div>\n            <Grid container spacing={2} className={classes.memories}>\n                {song_memories.map((memory, index) => (\n                    <Grid key={memory?.id || index} item xs={4}>\n                        <Card className={classes.card}>\n                            <CardActionArea>\n                                <CardMedia\n                                    className={classes.image}\n                                    square\n                                    image={memory?.downloadUrl || \"\"}\n                                    title=\"Memory\"\n                                />\n                                <CardContent>\n                                    <Typography\n                                        gutterBottom\n                                        variant=\"h5\"\n                                        component=\"h2\"\n                                    >\n                                        {memory?.user || \"-\"}\n                                    </Typography>\n                                    <Typography\n                                        variant=\"body2\"\n                                        color=\"textSecondary\"\n                                        component=\"p\"\n                                    >\n                                        {memory?.text || \"-\"}\n                                    </Typography>\n                                </CardContent>\n                            </CardActionArea>\n                            <CardActions>\n                                <Button\n                                    size=\"small\"\n                                    color=\"primary\"\n                                    onClick={() => deleteMemory(memory?.pk)}\n                                >\n                                    Remove\n                                </Button>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                ))}\n            </Grid>\n        </div>\n    );\n});\n\nconst Songs = observer(({ onSelectSong }) => {\n    const {\n        applicationStore: { memories, setSelectedSong },\n        spotifyStore: { songs, playSong, queueSong },\n    } = useStores();\n\n    const classes = useStyles();\n\n    return (\n        <List className={classes.songs}>\n            {songs.map((song, index) => (\n                <div key={song?.id || index}>\n                    <ListItem alignItems=\"flex-start\" className={classes.song}>\n                        <ListItemAvatar>\n                            <Avatar alt=\"\" src={song?.img || \"\"} />\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={song?.title || \"\"}\n                            secondary={<>{song?.artists?.join(\", \") || \"\"}</>}\n                        />\n                        <ListItemSecondaryAction>\n                            <Chip\n                                color=\"secondary\"\n                                label={`${\n                                    memories?.filter(\n                                        (memory) => memory?.song_id === song?.id\n                                    )?.length\n                                }`}\n                                onClick={() => {\n                                    setSelectedSong(song?.id);\n                                    onSelectSong();\n                                }}\n                            />\n                            <IconButton\n                                aria-label=\"play\"\n                                onClick={() => playSong(song?.uri)}\n                            >\n                                <PlayArrow />\n                            </IconButton>\n                            <IconButton\n                                aria-label=\"queue\"\n                                onClick={() => queueSong(song?.uri)}\n                            >\n                                <Queue />\n                            </IconButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                    <Divider variant=\"inset\" component=\"li\" />\n                </div>\n            ))}\n        </List>\n    );\n});\n\nconst SongsAndMemories = observer(() => {\n    const {\n        spotifyStore: { playlist },\n    } = useStores();\n\n    const classes = useStyles();\n    const [currentTab, setCurrentTab] = useState(0);\n\n    return (\n        <Paper className={classes.songspaper}>\n            <Typography component=\"h5\" variant=\"h5\">\n                {`${playlist?.title || \"\"}`}\n            </Typography>\n            <Tabs\n                className={classes.tabs}\n                value={currentTab}\n                onChange={(_, tab) => setCurrentTab(tab)}\n                aria-label=\"tabs\"\n                variant=\"fullWidth\"\n            >\n                <Tab label=\"Play or queue songs\" id=\"songs\" />\n                <Tab label=\"Memories\" id=\"memories\" />\n            </Tabs>\n            {currentTab === 0 && (\n                <Songs onSelectSong={() => setCurrentTab(1)} />\n            )}\n            {currentTab === 1 && <Memories />}\n        </Paper>\n    );\n});\n\nconst Host = observer(() => {\n    const {\n        spotifyStore: { playlist_id },\n    } = useStores();\n\n    const classes = useStyles();\n\n    return (\n        <Container className={classes.container}>\n            <Box className={classes.box}>\n                <Grid\n                    container\n                    spacing={2}\n                    direction=\"column\"\n                    className={classes.gridRoot}\n                >\n                    <Grid item xs={12} className={classes.flexshrink}>\n                        <MediaControlCard />\n                    </Grid>\n                    <Grid item xs={12} className={classes.playlistscontainer}>\n                        {playlist_id ? <SongsAndMemories /> : <Playlists />}\n                    </Grid>\n                </Grid>\n            </Box>\n        </Container>\n    );\n});\n\nexport default Host;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Container,\n    Grid,\n    Box,\n    List,\n    ListItem,\n    ListItemAvatar,\n    Avatar,\n    ListItemText,\n    ListItemSecondaryAction,\n    IconButton,\n    Divider,\n    Paper,\n    Typography,\n    DialogTitle,\n    DialogContent,\n    TextField,\n    DialogActions,\n    Button,\n    Dialog,\n} from \"@material-ui/core\";\nimport { RateReview } from \"@material-ui/icons\";\nimport { observer } from \"mobx-react-lite\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\n\nimport { useStores } from \"../stores\";\nimport { useScreenSize } from \"../hooks/screensize\";\n\nconst useStyles = makeStyles((theme) => ({\n    \"@global\": {\n        \".dropzone\": {\n            height: \"10rem\",\n            minHeight: \"unset\",\n        },\n        // \".dropzone .MuiTypography-root\": { margin: \"unset\" },\n        // \".dropzone .MuiSvgIcon-root MuiDropzoneArea-icon\": { display: \"none\" },\n        \".dropzone .MuiDropzonePreviewList-root\": {\n            marginLeft: \"-28px\",\n            marginTop: \"-119px\",\n        },\n    },\n    container: {\n        flex: \"1 1 auto\",\n        overflow: \"hidden\",\n    },\n    box: {\n        height: \"100%\",\n        overflow: \"hidden\",\n        paddingTop: theme.spacing(3),\n    },\n    gridRoot: {\n        height: \"100%\",\n        flexWrap: \"unset\",\n    },\n    songscontainer: {\n        overflow: \"hidden\",\n        flex: \"1 1 auto\",\n    },\n    songspaper: {\n        padding: theme.spacing(3),\n        height: \"100%\",\n        overflow: \"hidden\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    songs: {\n        overflow: \"scroll\",\n        width: \"100%\",\n        flex: \"1 1 auto\",\n    },\n    song: {\n        cursor: \"pointer\",\n        \"&:hover\": {\n            background: theme.palette.background.default,\n        },\n    },\n    noplaylist: {\n        height: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    dialog: {\n        [theme.breakpoints.up(\"sm\")]: {\n            width: \"34rem\",\n        },\n    },\n    dialogcontent: {\n        height: \"23rem\",\n    },\n    dropzone: {\n        height: \"6rem\",\n    },\n}));\n\nconst Songs = observer(() => {\n    const {\n        applicationStore: { openAddMemoryPopup },\n        spotifyStore: { songs, playlist },\n    } = useStores();\n\n    const classes = useStyles();\n\n    return (\n        <List className={classes.songs}>\n            <Typography component=\"h5\" variant=\"h5\">\n                {`${playlist?.title || \"\"}`}\n            </Typography>\n            {songs.map((song, index) => (\n                <div key={song?.id || index}>\n                    <ListItem alignItems=\"flex-start\" className={classes.song}>\n                        <ListItemAvatar>\n                            <Avatar alt=\"\" src={song?.img || \"\"} />\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={song?.title || \"\"}\n                            secondary={<>{song?.artists?.join(\", \") || \"\"}</>}\n                        />\n                        <ListItemSecondaryAction>\n                            <IconButton\n                                aria-label=\"add-memory\"\n                                onClick={() => openAddMemoryPopup(song?.id)}\n                            >\n                                <RateReview />\n                            </IconButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                    <Divider variant=\"inset\" component=\"li\" />\n                </div>\n            ))}\n        </List>\n    );\n});\n\nconst NoPlaylist = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.noplaylist}>\n            <Typography variant=\"subtitle1\">\n                The host is still choosing a playlist\n            </Typography>\n        </div>\n    );\n};\n\nconst AddMemoryDialog = observer(() => {\n    const {\n        applicationStore: { selectedSong, closeAddMemoryPopup, addMemory },\n    } = useStores();\n\n    const classes = useStyles();\n    const screensize = useScreenSize();\n\n    const [memory, setMemory] = useState({});\n\n    const handleFiles = async (files) => {\n        const [file] = files;\n        if (!file) return;\n        setMemory({ ...memory, file });\n    };\n\n    return (\n        <Dialog\n            onClose={() => {}}\n            open\n            fullScreen={screensize === \"mobile\"}\n            classes={{ paper: classes.dialog }}\n        >\n            <DialogTitle>\n                Add memory to song: {selectedSong?.title || \"\"}\n            </DialogTitle>\n            <DialogContent className={classes.dialogcontent}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <TextField\n                            fullWidth\n                            variant=\"outlined\"\n                            multiline\n                            rows={7}\n                            label={\"Memory\"}\n                            onChange={(e) => {\n                                setMemory({\n                                    ...memory,\n                                    text: `${e.target.value}`.substr(0, 300),\n                                });\n                            }}\n                            value={memory?.text || \"\"}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <DropzoneArea\n                            dropzoneClass=\"dropzone\"\n                            onChange={handleFiles}\n                            filesLimit={1}\n                            acceptedFiles={[\"image/*\"]}\n                            dropzoneText=\"Upload an image\"\n                        />\n                    </Grid>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <Button\n                            fullWidth\n                            size={\"medium\"}\n                            color={\"secondary\"}\n                            variant={\"contained\"}\n                            onClick={closeAddMemoryPopup}\n                        >\n                            Cancel\n                        </Button>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Button\n                            fullWidth\n                            disabled={\n                                !memory?.file || memory?.text?.length < 10\n                            }\n                            size={\"medium\"}\n                            color={\"primary\"}\n                            variant={\"contained\"}\n                            onClick={() => {\n                                addMemory(memory);\n                                closeAddMemoryPopup();\n                            }}\n                        >\n                            Send\n                        </Button>\n                    </Grid>\n                </Grid>\n            </DialogActions>\n        </Dialog>\n    );\n});\n\nconst Guest = observer(() => {\n    const {\n        applicationStore: { popup },\n        spotifyStore: { songs },\n    } = useStores();\n\n    const classes = useStyles();\n\n    return (\n        <>\n            {popup === \"addMemory\" && <AddMemoryDialog />}\n            <Container className={classes.container}>\n                <Box className={classes.box}>\n                    <Grid\n                        container\n                        spacing={2}\n                        direction=\"column\"\n                        className={classes.gridRoot}\n                    >\n                        <Grid item xs={12} className={classes.songscontainer}>\n                            <Paper className={classes.songspaper}>\n                                {songs?.length ? <Songs /> : <NoPlaylist />}\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Container>\n        </>\n    );\n});\n\nexport default Guest;\n","import React, { useEffect } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Helmet } from \"react-helmet\";\n\nimport { useStores } from \"../stores\";\n\nimport LandingPage from \"./LandingPage\";\nimport Navbar from \"./Navbar\";\nimport Host from \"./Host\";\nimport Guest from \"./Guest\";\n\nconst App = observer(() => {\n    const {\n        applicationStore: { initialize, nav },\n    } = useStores();\n\n    useEffect(() => {\n        initialize();\n    }, [initialize]);\n\n    return (\n        <div\n            style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                height: \"100vh\",\n                width: \"100vw\",\n                overflow: \"hidden\",\n            }}\n        >\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <meta name=\"theme-color\" content=\"#237fb1\" />\n\n                <title>Playlist Memories</title>\n            </Helmet>\n            {nav !== \"landing_page\" && <Navbar />}\n            {nav === \"landing_page\" && <LandingPage />}\n            {nav === \"host\" && <Host />}\n            {nav === \"guest\" && <Guest />}\n        </div>\n    );\n});\n\nexport default App;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n    palette: {\n        type: \"light\",\n        primary: {\n            main: \"#5F4B8BFF\",\n            contrastText: \"#fefefe\",\n        },\n        secondary: {\n            main: \"#E69A8DFF\",\n            contrastText: \"#fefefe\",\n        },\n        red: {\n            main: \"#ff0000\",\n        },\n        error: {\n            main: \"#ab3030\",\n        },\n        background: {\n            default: \"#f0f0f0\",\n        },\n    },\n});\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { SnackbarProvider } from \"notistack\";\n\nimport Main from \"./views/Main\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <SnackbarProvider maxSnack={3}>\n            <Main />\n        </SnackbarProvider>\n    </ThemeProvider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}