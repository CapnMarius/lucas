{"version":3,"sources":["stores/application.js","stores/spotify.js","apis/spotify.js","stores/index.jsx","apis/backend.js","hooks/screensize.js","views/shared/LandingPage.jsx","views/shared/Navbar.jsx","views/host/MediaControlCard.jsx","views/host/Playlists.jsx","views/host/Memories.jsx","views/host/Songs.jsx","views/shared/AddSongDialog.jsx","hooks/useToaster.js","views/host/index.jsx","views/guest/Songs.jsx","views/guest/AddMemoryDialog.jsx","views/guest/NoPlaylist.jsx","views/guest/index.jsx","views/shared/Main.jsx","theme.jsx","index.js"],"names":["ApplicationStore","api","spotifyStore","hostOrGuest","room","username","memories","socket","guests","songIdForMemory","popup","intervalId","autoBind","this","authCode","search","window","location","href","includes","code","split","history","replaceState","origin","getSpotifyAuthCode","createRoom","Promise","resolve","getSocket","onopen","sendMessage","onmessage","e","message","JSON","parse","data","console","log","handleMessage","action","initialize","setInterval","readyState","WebSocket","CLOSED","initializeSocket","message_data","isHost","handleMessageFromGuest","isGuest","handleMessageFromHost","getSongs","count","Number","getMemories","reload","playlist_id","setPlaylist","args","send","stringify","from","clearInterval","close","room_code","localStorage","getItem","room_name","name","removeItem","Math","floor","random","setItem","oauth","redirect","getRoom","songId","uri","addSong","text","file","saveMemory","song_id","user","filename","upload_url","saveMemoryImage","memory_id","deleteMemory","filter","memory","pk","songs","find","song","id","decorate","observable","leaveRoom","openAddMemoryPopup","openAddSongPopup","closeAddMemoryPopup","closeAddSongPopup","setSelectedSong","nav","computed","selectedSong","SpotifyStore","spotify_api","a","token","access_token","preparePlayer","getPlaylists","reject","onSpotifyWebPlaybackSDKReady","startPlayer","document","getElementById","script","createElement","type","async","defer","src","onload","onerror","error","Error","head","appendChild","player","Spotify","Player","getOAuthToken","cb","volume","addListener","device_id","player_state","connect","playlists","createPlaylist","description","query","playSong","queueSong","togglePlayback","playback","paused","nextSong","next","setCurrentSong","track_window","current_track","playlist","setSong","goBack","current_song","SpotifyApi","superagent","put","base","set","Authorization","uris","post","env","NODE_ENV","BACKEND_BASE_DEV","BACKEND_BASE_PRD","get","response","body","delete","PROTOCOL_DEV","PROTOCOL_PRD","applicationStore","context","createContext","useStores","useContext","useScreenSize","isLarge","useMediaQuery","minWidth","isMedium","isSmall","useStyles","makeStyles","theme","dialog","breakpoints","up","width","height","Initial","onCreate","onJoin","DialogTitle","DialogContent","DialogActions","Grid","container","spacing","item","xs","Button","fullWidth","size","color","variant","onClick","Create","onGoBack","useState","setName","TextField","label","onChange","target","value","disabled","Join","setUser","setCode","length","LandingPage","observer","generateRoom","joinRoom","classes","screensize","stage","setStage","Dialog","onClose","open","fullScreen","paper","grow","flexGrow","appbar","flex","chip","marginRight","Navbar","closeRoom","anchorEl","setAnchorEl","AppBar","position","className","Toolbar","Chip","icon","Room","AccountCircle","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","Boolean","MenuItem","navigator","clipboard","writeText","root","display","details","flexDirection","content","cover","controls","alignItems","paddingLeft","paddingBottom","playIcon","MediaControlCard","Card","CardContent","Typography","component","title","artists","join","IconButton","aria-label","PlayArrow","Pause","SkipNext","CardMedia","image","img","padding","overflow","cursor","background","palette","default","choosePlaylistBanner","Playlists","Paper","List","map","index","ListItem","ListItemAvatar","Avatar","alt","ListItemText","primary","secondary","owner","ListItemSecondaryAction","Divider","card","marginTop","selectedSongText","Memories","song_memories","style","overflowY","overflowX","avatar","onDelete","CardActionArea","square","downloadUrl","gutterBottom","CardActions","Songs","onSelectSong","Queue","minHeight","marginLeft","dialogcontent","AddSongDialog","addToast","enqueueSnackbar","useSnackbar","options","anchorOrigin","horizontal","vertical","useToaster","setQuery","debounceId","setDebounceId","results","setResults","q","clearTimeout","setTimeout","then","result","catch","Add","box","paddingTop","songspaper","gridRoot","flexWrap","flexshrink","playlistscontainer","songsBanner","justifyContent","tabs","SongsAndMemories","currentTab","setCurrentTab","Tabs","_","tab","Tab","Host","Container","Box","direction","RateReview","AddMemoryDialog","addMemory","setMemory","handleFiles","files","multiline","rows","substr","dropzoneClass","filesLimit","acceptedFiles","dropzoneText","showAlerts","noplaylist","NoPlaylist","songscontainer","dropzone","Guest","App","useEffect","left","right","top","bottom","Helmet","charSet","createMuiTheme","main","contrastText","red","ReactDOM","render","ThemeProvider","CssBaseline","maxSnack","Main"],"mappings":"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","file":"static/js/main.75f0933e.chunk.js","sourcesContent":["import { observable, action, decorate, computed } from \"mobx\";\nimport autoBind from \"auto-bind\";\n\nconst generateRoomCode = () => Math.floor(Math.random() * 90000) + 10000;\n\nconst getSpotifyAuthCode = () => {\n    const search = window.location.href;\n    if (!search.includes(\"?code\")) return;\n    const code = search.split(\"?code=\")[1];\n    window.history.replaceState({}, \"\", window.location.origin);\n    return code;\n};\n\nexport class ApplicationStore {\n    api = null;\n    spotifyStore = null;\n    hostOrGuest = null;\n    room = null;\n    username = null;\n    memories = [];\n    socket = null;\n    guests = 0;\n    songIdForMemory = null;\n    popup = null;\n    intervalId = null;\n\n    constructor(api, spotifyStore) {\n        autoBind(this);\n        this.api = api;\n        this.spotifyStore = spotifyStore;\n    }\n\n    initialize() {\n        const authCode = getSpotifyAuthCode();\n        if (authCode) {\n            this.createRoom(authCode);\n        }\n    }\n\n    initializeSocket() {\n        return new Promise((resolve) => {\n            this.socket = this.api.getSocket();\n\n            this.socket.onopen = () => {\n                this.sendMessage(\"SET_CLIENT_META\", {\n                    room: this.room.code,\n                    hostOrGuest: this.hostOrGuest,\n                });\n                resolve();\n            };\n            this.socket.onmessage = (e) => {\n                const message = JSON.parse(e.data);\n                console.log(\"Received: '\" + e.data + \"'\");\n                this.handleMessage(message.action, message);\n            };\n\n            this.spotifyStore.initialize(\n                this.room,\n                this.hostOrGuest,\n                this.socket\n            );\n\n            this.intervalId = setInterval(() => {\n                if (this.socket.readyState === WebSocket.CLOSED) {\n                    this.initializeSocket();\n                }\n            }, 30000);\n        });\n    }\n\n    handleMessage(action, message_data) {\n        if (action === \"PING\") {\n            this.sendMessage(\"PONG\");\n            return;\n        }\n        if (action === \"NEW_SONG\") {\n            this.spotifyStore.getSongs();\n            return;\n        }\n        if (this.isHost) {\n            this.handleMessageFromGuest(action, message_data);\n        }\n        if (this.isGuest) {\n            this.handleMessageFromHost(action, message_data);\n        }\n    }\n\n    handleMessageFromGuest(action, message_data) {\n        if (action === \"UPDATE_GUEST_COUNT\") {\n            const { count } = message_data;\n            this.guests = Number(count);\n        }\n        if (action === \"NEW_MEMORY\") {\n            this.getMemories();\n        }\n    }\n\n    handleMessageFromHost(action, message_data) {\n        if (action === \"ROOM_CLOSED\") {\n            window.location.reload();\n        }\n        if (action === \"PLAYLIST_SET\") {\n            const { playlist_id } = message_data;\n            this.spotifyStore.setPlaylist(playlist_id);\n        }\n    }\n\n    async sendMessage(action, args = {}) {\n        if (this.socket.readyState === WebSocket.CLOSED) {\n            await this.initializeSocket();\n        }\n\n        this.socket.send(\n            JSON.stringify({\n                action,\n                from: this.hostOrGuest,\n                ...args,\n            })\n        );\n    }\n\n    get nav() {\n        if (!this.hostOrGuest) return \"landing_page\";\n        if (this.hostOrGuest === \"host\") return \"host\";\n        return \"guest\";\n    }\n\n    leaveRoom() {\n        clearInterval(this.intervalId);\n        this.intervalId = null;\n        this.room = null;\n        this.username = null;\n        this.hostOrGuest = null;\n        this.socket?.close();\n        this.socket = null;\n    }\n\n    async closeRoom() {\n        window.location.reload();\n    }\n\n    async createRoom(code) {\n        let room;\n        const room_code = window.localStorage.getItem(\"code\");\n        const room_name = window.localStorage.getItem(\"name\");\n        try {\n            room = await this.api.createRoom({\n                code,\n                room: { code: room_code, name: room_name },\n            });\n        } catch (e) {\n            console.log(\"🧙‍♂️\", e);\n        }\n\n        window.localStorage.removeItem(\"code\");\n        window.localStorage.removeItem(\"name\");\n        if (!room) {\n            this.room = null;\n            this.hostOrGuest = null;\n            return;\n        }\n\n        this.room = room;\n        this.hostOrGuest = \"host\";\n\n        this.initializeSocket();\n    }\n\n    async generateRoom(name) {\n        const code = generateRoomCode();\n        window.localStorage.setItem(\"name\", name);\n        window.localStorage.setItem(\"code\", code);\n        const redirect = await this.api.oauth();\n        window.location = redirect;\n    }\n\n    async joinRoom(username, code) {\n        let room;\n        room = await this.api.getRoom({\n            code,\n        });\n        if (!room) return;\n\n        this.room = room;\n        this.username = username;\n        this.hostOrGuest = \"guest\";\n\n        this.initializeSocket();\n    }\n\n    openAddMemoryPopup(songId) {\n        this.songIdForMemory = songId;\n        this.popup = \"addMemory\";\n    }\n\n    openAddSongPopup() {\n        this.popup = \"addSong\";\n    }\n\n    closeAddMemoryPopup() {\n        this.popup = null;\n        this.songIdForMemory = null;\n    }\n\n    closeAddSongPopup() {\n        this.popup = null;\n    }\n\n    async addSong(uri) {\n        await this.api.addSong({ room_code: this.room.code, uri });\n        this.spotifyStore.getSongs();\n        this.sendMessage(\"NEW_SONG\");\n    }\n\n    async addMemory({ text, file }) {\n        try {\n            const upload_url = await this.api.saveMemory({\n                room_code: this.room.code,\n                song_id: this.songIdForMemory,\n                user: this.username,\n                text,\n                filename: file.name,\n            });\n            await this.api.saveMemoryImage({\n                upload_url,\n                file,\n            });\n            this.sendMessage(\"NEW_MEMORY\");\n        } catch (e) {\n            console.log(\"🧙‍♂️\", e);\n        }\n    }\n\n    async deleteMemory(memory_id) {\n        try {\n            await this.api.deleteMemory({\n                room_code: this.room.code,\n                memory_id,\n            });\n            this.memories = this.memories.filter(\n                (memory) => memory?.pk !== memory_id\n            );\n        } catch (e) {\n            console.log(\"🧙‍♂️\", e);\n        }\n    }\n\n    async getMemories() {\n        try {\n            this.memories = await this.api.getMemories({\n                room_code: this.room.code,\n            });\n            console.log(JSON.parse(JSON.stringify(this.memories)));\n        } catch (e) {\n            console.log(\"🧙‍♂️\", e);\n        }\n    }\n\n    get isHost() {\n        return this.hostOrGuest === \"host\";\n    }\n\n    get isGuest() {\n        return this.hostOrGuest === \"guest\";\n    }\n\n    get selectedSong() {\n        const current_track = this.spotifyStore.songs.find(\n            (song) => song.id === this.songIdForMemory\n        );\n        return current_track;\n    }\n\n    setSelectedSong(song_id) {\n        this.songIdForMemory = song_id;\n    }\n}\n\ndecorate(ApplicationStore, {\n    hostOrGuest: observable,\n    username: observable,\n    room: observable,\n    guests: observable,\n    memories: observable,\n    songIdForMemory: observable,\n    popup: observable,\n    initialize: action,\n    createRoom: action,\n    leaveRoom: action,\n    openAddMemoryPopup: action,\n    openAddSongPopup: action,\n    closeAddMemoryPopup: action,\n    closeAddSongPopup: action,\n    deleteMemory: action,\n    setSelectedSong: action,\n    nav: computed,\n    isHost: computed,\n    isGuest: computed,\n    selectedSong: computed,\n});\n","import { observable, action, computed, decorate } from \"mobx\";\n\nexport class SpotifyStore {\n    constructor(api, spotify_api) {\n        this.api = api;\n        this.spotify_api = spotify_api;\n\n        // initialize data\n        this.token = null;\n        this.room_code = null;\n        this.room_name = null;\n        this.player = null;\n        this.device_id = null;\n        this.player_state = null;\n\n        // spotify data\n        this.playlists = [];\n        this.playlist_id = null;\n        this.songs = [];\n        this.song_id = null;\n\n        this.socket = null;\n        this.hostOrGuest = null;\n    }\n\n    initialize = async (room, hostOrGuest, socket) => {\n        this.token = room.access_token;\n        this.room_code = room.code;\n        this.room_name = room.name;\n        this.hostOrGuest = hostOrGuest;\n        if (this.isHost) {\n            this.socket = socket;\n            this.preparePlayer();\n            this.getPlaylists();\n        }\n\n        if (this.isGuest && room.playlist_id) {\n            this.setPlaylist(room.playlist_id);\n        }\n    };\n\n    preparePlayer = () =>\n        new Promise((resolve, reject) => {\n            if (!window.onSpotifyWebPlaybackSDKReady) {\n                window.onSpotifyWebPlaybackSDKReady = this.startPlayer;\n            } else {\n                this.startPlayer();\n            }\n\n            const scriptTag = document.getElementById(\"spotify-player\");\n\n            if (!scriptTag) {\n                const script = document.createElement(\"script\");\n\n                script.id = \"spotify-player\";\n                script.type = \"text/javascript\";\n                script.async = false;\n                script.defer = true;\n                script.src = \"https://sdk.scdn.co/spotify-player.js\";\n                script.onload = () => resolve();\n                script.onerror = (error) =>\n                    reject(new Error(`loadScript: ${error.message}`));\n\n                document.head.appendChild(script);\n            } else {\n                resolve();\n            }\n        });\n\n    startPlayer = () => {\n        this.player = new window.Spotify.Player({\n            getOAuthToken: (cb) => {\n                cb(this.token);\n            },\n            name: \"Playlist Memories\",\n            volume: 1,\n        });\n\n        this.player.addListener(\"ready\", (e) => {\n            this.device_id = e.device_id;\n        });\n        this.player.addListener(\"not_ready\", (e) => {\n            console.log(\"not_ready\", e);\n        });\n        this.player.addListener(\"player_state_changed\", (player_state) => {\n            this.player_state = player_state;\n        });\n        this.player.addListener(\"initialization_error\", (error) =>\n            console.log(\"initialization_error\", error.message)\n        );\n        this.player.addListener(\"authentication_error\", (error) =>\n            console.log(\"authentication_error\", error.message)\n        );\n        this.player.addListener(\"account_error\", (error) =>\n            console.log(\"account_error\", error.message)\n        );\n        this.player.addListener(\"playback_error\", (error) =>\n            console.log(\"playback_error\", error.message)\n        );\n\n        this.player.connect();\n    };\n\n    getPlaylists = async () => {\n        try {\n            this.playlists = await this.api.getPlaylists({\n                room_code: this.room_code,\n            });\n        } catch (e) {\n            console.error(e, \"Failed to get playlists!\");\n        }\n    };\n\n    setPlaylist = async (playlist_id) => {\n        if (this.isHost) {\n            const success = await this.api.setPlaylist({\n                room_code: this.room_code,\n                playlist_id,\n            });\n            if (!success) {\n                console.log(\"👲\", \"Failed to set playlist in room!!\");\n                return;\n            }\n\n            this.sendMessage(\"PLAYLIST_SET\", { playlist_id });\n        }\n\n        this.playlist_id = playlist_id;\n        if (playlist_id) this.getSongs();\n    };\n\n    createPlaylist = async () => {\n        if (this.isGuest) {\n            throw new Error(\n                \"Trying to create playlist as guest, this should not be possible!\"\n            );\n        }\n        const playlist_id = await this.api.createPlaylist({\n            room_code: this.room_code,\n            name: this.room_name,\n            description: \"A playlist created with Playlist Memories\",\n        });\n        if (!playlist_id) {\n            console.log(\"👩‍🎤\", \"Failed to create playlist!\");\n            return;\n        }\n        await this.getPlaylists();\n        this.setPlaylist(playlist_id);\n    };\n\n    search = async (query) =>\n        this.api.search({\n            query,\n            room_code: this.room_code,\n        });\n\n    getSongs = async () => {\n        this.songs = [];\n        try {\n            this.songs = await this.api.getSongs({\n                room_code: this.room_code,\n            });\n        } catch (e) {\n            console.error(e, \"Failed to get songs!\");\n        }\n    };\n\n    playSong = async (uri) => {\n        try {\n            await this.spotify_api.playSong({\n                device_id: this.device_id,\n                token: this.token,\n                uri,\n            });\n        } catch (e) {\n            console.error(e, \"Failed to play song!\");\n        }\n    };\n\n    queueSong = async (uri) => {\n        try {\n            await this.spotify_api.queueSong({\n                device_id: this.device_id,\n                token: this.token,\n                uri,\n            });\n        } catch (e) {\n            console.error(e, \"Failed to queue song!\");\n        }\n    };\n\n    togglePlayback = async () => {\n        try {\n            await this.spotify_api.togglePlayback({\n                playback: this.paused ? \"play\" : \"pause\",\n                device_id: this.device_id,\n                token: this.token,\n            });\n        } catch (e) {\n            console.error(e, \"Failed to toggle playback!\");\n        }\n    };\n\n    nextSong = async () => {\n        try {\n            await this.spotify_api.next({\n                device_id: this.device_id,\n                token: this.token,\n            });\n        } catch (e) {\n            console.error(e, \"Failed to toggle playback!\");\n        }\n    };\n\n    setCurrentSong = (song_id) => {\n        this.player_state = {\n            track_window: { current_track: { id: song_id } },\n        };\n    };\n\n    sendMessage(action, args) {\n        this.socket.send(\n            JSON.stringify({\n                action,\n                from: this.hostOrGuest,\n                ...args,\n            })\n        );\n    }\n\n    get paused() {\n        return this.player_state?.paused ?? true;\n    }\n\n    get current_song() {\n        const current_track = this.songs.find(\n            (song) =>\n                song.id === this.player_state?.track_window?.current_track?.id\n        );\n        return current_track;\n    }\n\n    get playlist() {\n        return this.playlists?.find(\n            (playlist) => playlist?.id === this.playlist_id\n        );\n    }\n\n    get isHost() {\n        return this.hostOrGuest === \"host\";\n    }\n\n    get isGuest() {\n        return this.hostOrGuest === \"guest\";\n    }\n}\n\ndecorate(SpotifyStore, {\n    token: observable,\n    player: observable,\n    device_id: observable,\n    player_state: observable,\n    playlists: observable,\n    playlist_id: observable,\n    room_code: observable,\n    room_name: observable,\n    songs: observable,\n    song_id: observable,\n    initialize: action,\n    startPlayer: action,\n    getPlaylists: action,\n    setPlaylist: action,\n    getSongs: action,\n    setSong: action,\n    setCurrentSong: action,\n    goBack: action,\n    paused: computed,\n    current_song: computed,\n    isHost: computed,\n    isGuest: computed,\n});\n","import superagent from \"superagent\";\n\nclass SpotifyApi {\n    constructor() {\n        this.base = `https://api.spotify.com/v1`;\n    }\n\n    playSong = async ({ token, device_id, uri }) => {\n        await superagent\n            .put(`${this.base}/me/player/play`)\n            .set({ Authorization: `Bearer ${token}` })\n            .query({ device_id })\n            .send({ uris: [uri] });\n    };\n\n    queueSong = async ({ token, device_id, uri }) => {\n        await superagent\n            .post(`${this.base}/me/player/queue`)\n            .set({ Authorization: `Bearer ${token}` })\n            .query({ device_id, uri });\n    };\n\n    togglePlayback = async ({ token, device_id, playback }) => {\n        await superagent\n            .put(`${this.base}/me/player/${playback}`)\n            .set({ Authorization: `Bearer ${token}` })\n            .query({ device_id });\n    };\n\n    next = async ({ token, device_id }) => {\n        await superagent\n            .post(`${this.base}/me/player/next`)\n            .set({ Authorization: `Bearer ${token}` })\n            .query({ device_id });\n    };\n}\n\nexport default SpotifyApi;\n","import { createContext, useContext } from \"react\";\n\nimport { ApplicationStore } from \"../stores/application\";\nimport { SpotifyStore } from \"../stores/spotify\";\n// import PlayerService from \"../stores/player\";\nimport SpotifyApi from \"../apis/spotify\";\nimport BackendApi from \"../apis/backend\";\n\nconst api = new BackendApi();\nconst spotify_api = new SpotifyApi();\nconst spotifyStore = new SpotifyStore(api, spotify_api);\nconst applicationStore = new ApplicationStore(api, spotifyStore);\nconst context = createContext({ applicationStore, spotifyStore });\n\nexport const useStores = () => useContext(context);\n","import superagent from \"superagent\";\nimport env from \"react-dotenv\";\n\nclass BackendApi {\n    constructor() {\n        this.base =\n            env.NODE_ENV === \"development\"\n                ? `${env.PROTOCOL_DEV}://${env.BACKEND_BASE_DEV}`\n                : `${env.PROTOCOL_PRD}://${env.BACKEND_BASE_PRD}`;\n    }\n\n    getSocket = () =>\n        new WebSocket(\n            `${env.NODE_ENV === \"development\" ? \"ws\" : \"wss\"}://${\n                env.NODE_ENV === \"development\"\n                    ? env.BACKEND_BASE_DEV\n                    : env.BACKEND_BASE_PRD\n            }`\n        );\n\n    oauth = async () => {\n        try {\n            const response = await superagent.get(`${this.base}/authorize`);\n            return response?.text;\n        } catch (e) {\n            console.log(\"👑\", e);\n        }\n    };\n\n    getRoom = async ({ code }) => {\n        try {\n            const response = await superagent.get(`${this.base}/room/${code}`);\n            return response?.body?.room;\n        } catch (e) {\n            console.log(\"🦸‍♂️\", e);\n            return false;\n        }\n    };\n\n    createRoom = async ({ room, code }) => {\n        try {\n            const response = await superagent\n                .post(`${this.base}/room`)\n                .send({ room, code });\n            return response?.body?.room;\n        } catch (e) {\n            console.log(\"👨‍👨‍👦‍👦\", e);\n        }\n    };\n\n    getPlaylists = async ({ room_code }) => {\n        try {\n            const response = await superagent.get(\n                `${this.base}/room/${room_code}/playlists`\n            );\n            return response.body || [];\n        } catch (e) {\n            console.log(\"👁\", e);\n        }\n    };\n\n    setPlaylist = async ({ room_code, playlist_id }) => {\n        try {\n            await superagent\n                .put(`${this.base}/room/${room_code}/playlist`)\n                .send({ playlist_id });\n            return true;\n        } catch (e) {\n            console.log(\"👁\", e);\n            return false;\n        }\n    };\n\n    createPlaylist = async ({ room_code, name, description }) => {\n        try {\n            const response = await superagent\n                .post(`${this.base}/room/${room_code}/playlist`)\n                .send({ name, description });\n\n            return response?.text;\n        } catch (e) {\n            console.log(\"😐\", e);\n            return false;\n        }\n    };\n\n    getSongs = async ({ room_code }) => {\n        try {\n            const response = await superagent.get(\n                `${this.base}/room/${room_code}/songs`\n            );\n            return response?.body || [];\n        } catch (e) {\n            console.log(\"👂\", e);\n        }\n    };\n\n    addSong = async ({ room_code, uri }) => {\n        await superagent.put(`${this.base}/room/${room_code}/songs/${uri}`);\n    };\n\n    search = async ({ room_code, query }) => {\n        try {\n            const response = await superagent.get(\n                `${this.base}/room/${room_code}/search/${query}`\n            );\n            return response?.body || [];\n        } catch (e) {\n            console.log(\"👨‍👧‍👦\", e);\n        }\n    };\n\n    getMemories = async ({ room_code }) => {\n        try {\n            const response = await superagent.get(\n                `${this.base}/room/${room_code}/memories`\n            );\n            return response?.body || [];\n        } catch (e) {\n            console.log(\"🙏\", e);\n        }\n    };\n\n    saveMemory = async ({ room_code, song_id, ...data }) => {\n        try {\n            const response = await superagent\n                .put(`${this.base}/room/${room_code}/memories`)\n                .send({ ...data, song_id });\n            return response?.body?.upload_url;\n        } catch (e) {\n            console.log(\"🙏\", e);\n        }\n    };\n\n    saveMemoryImage = async ({ file, upload_url }) => {\n        try {\n            await superagent\n                .put(upload_url)\n                .set(\"Content-Type\", file.type)\n                .send(file);\n            return true;\n        } catch (e) {\n            console.log(\"🙏\", e.response);\n        }\n    };\n\n    deleteMemory = async ({ room_code, memory_id }) => {\n        try {\n            await superagent.delete(\n                `${this.base}/room/${room_code}/memories/${memory_id}`\n            );\n            return true;\n        } catch (e) {\n            console.log(\"🙏\", e);\n        }\n    };\n}\n\nexport default BackendApi;\n","import { useMediaQuery } from \"react-responsive\";\n\nexport const useScreenSize = () => {\n    const isLarge = useMediaQuery({ minWidth: 1280 });\n    const isMedium = useMediaQuery({ minWidth: 960 });\n    const isSmall = useMediaQuery({ minWidth: 600 });\n\n    if (isLarge) return \"large\";\n    if (isMedium) return \"medium\";\n    if (isSmall) return \"small\";\n    return \"mobile\";\n};\n","import React, { useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Button } from \"@material-ui/core\";\nimport { Grid, TextField } from \"@material-ui/core\";\n\nimport { useStores } from \"../../stores\";\nimport { useScreenSize } from \"../../hooks/screensize\";\n\nconst useStyles = makeStyles((theme) => ({\n    dialog: {\n        [theme.breakpoints.up(\"sm\")]: {\n            width: \"34rem\",\n            height: \"15rem\",\n        },\n    },\n}));\n\nconst Initial = ({ onCreate, onJoin }) => {\n    return (\n        <>\n            <DialogTitle>Playlist Memories</DialogTitle>\n            <DialogContent>\n                Share the memories you've made with a song from your favorite\n                playlist!\n            </DialogContent>\n            <DialogActions>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <Button\n                            fullWidth\n                            size={\"medium\"}\n                            color={\"primary\"}\n                            variant={\"contained\"}\n                            onClick={onCreate}\n                        >\n                            Create room\n                        </Button>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Button\n                            fullWidth\n                            size={\"medium\"}\n                            color={\"primary\"}\n                            variant={\"contained\"}\n                            onClick={onJoin}\n                        >\n                            Join room\n                        </Button>\n                    </Grid>\n                </Grid>\n            </DialogActions>\n        </>\n    );\n};\n\nconst Create = ({ onCreate, onGoBack }) => {\n    const [name, setName] = useState(\"\");\n    return (\n        <>\n            <DialogTitle>Create room</DialogTitle>\n            <DialogContent>\n                <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    size={\"small\"}\n                    label={\"Room name\"}\n                    onChange={(e) => {\n                        setName(e.target.value);\n                    }}\n                    value={name}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <Button\n                            fullWidth\n                            size={\"medium\"}\n                            color={\"secondary\"}\n                            variant={\"contained\"}\n                            onClick={onGoBack}\n                        >\n                            Go back\n                        </Button>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Button\n                            fullWidth\n                            size={\"medium\"}\n                            color={\"primary\"}\n                            variant={\"contained\"}\n                            disabled={!name}\n                            onClick={() => {\n                                onCreate(name);\n                            }}\n                        >\n                            Create room\n                        </Button>\n                    </Grid>\n                </Grid>\n            </DialogActions>\n        </>\n    );\n};\n\nconst Join = ({ onJoin, onGoBack }) => {\n    const [user, setUser] = useState(\"\");\n    const [code, setCode] = useState(\"\");\n    return (\n        <>\n            <DialogTitle>Join room</DialogTitle>\n            <DialogContent>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <TextField\n                            fullWidth\n                            variant=\"outlined\"\n                            size={\"small\"}\n                            label={\"Username\"}\n                            onChange={(e) => {\n                                setUser(e.target.value);\n                            }}\n                            value={user}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            fullWidth\n                            variant=\"outlined\"\n                            size={\"small\"}\n                            label={\"Room code\"}\n                            onChange={(e) => {\n                                setCode(e.target.value);\n                            }}\n                            value={code}\n                        />\n                    </Grid>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <Button\n                            fullWidth\n                            size={\"medium\"}\n                            color={\"secondary\"}\n                            variant={\"contained\"}\n                            onClick={onGoBack}\n                        >\n                            Go back\n                        </Button>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Button\n                            fullWidth\n                            size={\"medium\"}\n                            color={\"primary\"}\n                            variant={\"contained\"}\n                            disabled={!user || code?.length !== 5}\n                            onClick={() => {\n                                onJoin(user, code);\n                            }}\n                        >\n                            Join room\n                        </Button>\n                    </Grid>\n                </Grid>\n            </DialogActions>\n        </>\n    );\n};\n\nconst LandingPage = observer(() => {\n    const {\n        applicationStore: { generateRoom, joinRoom },\n    } = useStores();\n\n    const classes = useStyles();\n    const screensize = useScreenSize();\n    const [stage, setStage] = useState(\"initial\");\n\n    return (\n        <Dialog\n            onClose={() => {}}\n            open\n            fullScreen={screensize === \"mobile\"}\n            classes={{ paper: classes.dialog }}\n        >\n            {stage === \"initial\" && (\n                <Initial\n                    onCreate={() => setStage(\"create\")}\n                    onJoin={() => setStage(\"join\")}\n                />\n            )}\n            {stage === \"create\" && (\n                <Create\n                    onCreate={(name) => generateRoom(name)}\n                    onGoBack={() => setStage(\"initial\")}\n                />\n            )}\n            {stage === \"join\" && (\n                <Join\n                    onJoin={(user, code) => joinRoom(user, code)}\n                    onGoBack={() => setStage(\"initial\")}\n                />\n            )}\n        </Dialog>\n    );\n});\n\nexport default LandingPage;\n","import React, { useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Menu, MenuItem, Chip } from \"@material-ui/core\";\nimport { AccountCircle, Room } from \"@material-ui/icons\";\n\nimport { useStores } from \"../../stores\";\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    appbar: {\n        flex: \"0 0 auto\",\n    },\n    chip: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst Navbar = observer(() => {\n    const {\n        applicationStore: { nav, username, leaveRoom, closeRoom, room, guests },\n    } = useStores();\n\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const copyRoomCode = () => {\n        navigator.clipboard.writeText(room?.code);\n    };\n\n    return (\n        <AppBar position=\"static\" className={classes.appbar}>\n            <Toolbar>\n                <Chip\n                    icon={<Room />}\n                    label={`${room?.name}`}\n                    className={classes.chip}\n                />\n                {nav === \"guest\" && (\n                    <Chip\n                        icon={<AccountCircle />}\n                        label={`${username}`}\n                        className={classes.chip}\n                    />\n                )}\n                {nav === \"host\" && (\n                    <Chip\n                        icon={<AccountCircle />}\n                        label={`${guests}`}\n                        className={classes.chip}\n                    />\n                )}\n                <div className={classes.grow} />\n                {room && (\n                    <>\n                        <Button\n                            color=\"inherit\"\n                            aria-controls=\"simple-menu\"\n                            aria-haspopup=\"true\"\n                            onClick={(event) =>\n                                setAnchorEl(event.currentTarget)\n                            }\n                        >\n                            Code: {room.code}\n                        </Button>\n                        <Menu\n                            anchorEl={anchorEl}\n                            keepMounted\n                            open={Boolean(anchorEl)}\n                            onClose={() => setAnchorEl(null)}\n                        >\n                            {nav === \"host\" && (\n                                <MenuItem onClick={copyRoomCode}>\n                                    Copy room code\n                                </MenuItem>\n                            )}\n                            <MenuItem\n                                onClick={\n                                    nav === \"guest\" ? leaveRoom : closeRoom\n                                }\n                            >\n                                {nav === \"guest\" ? \"Leave\" : \"Close\"} room\n                            </MenuItem>\n                        </Menu>\n                    </>\n                )}\n            </Toolbar>\n        </AppBar>\n    );\n});\n\nexport default Navbar;\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { SkipNext, PlayArrow, Pause } from \"@material-ui/icons\";\nimport {\n    Card,\n    CardContent,\n    Typography,\n    IconButton,\n    CardMedia,\n} from \"@material-ui/core\";\n\nimport { useStores } from \"../../stores\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexGrow: \"1\",\n    },\n    details: {\n        display: \"flex\",\n        flex: \"1 1 auto\",\n        flexDirection: \"column\",\n    },\n    content: {\n        flex: \"1 0 auto\",\n    },\n    cover: {\n        width: 151,\n    },\n    controls: {\n        display: \"flex\",\n        alignItems: \"center\",\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    playIcon: {\n        height: 38,\n        width: 38,\n    },\n}));\n\nconst MediaControlCard = observer(() => {\n    const classes = useStyles();\n\n    const {\n        spotifyStore: { paused, current_song, togglePlayback, nextSong },\n    } = useStores();\n\n    return !current_song ? null : (\n        <Card className={classes.root}>\n            <div className={classes.details}>\n                <CardContent className={classes.content}>\n                    <Typography component=\"h5\" variant=\"h5\">\n                        {current_song?.title || \"\"}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                        {current_song?.artists?.join(\", \") || \"\"}\n                    </Typography>\n                </CardContent>\n                <div className={classes.controls}>\n                    <IconButton\n                        aria-label=\"play/pause\"\n                        disabled={!current_song}\n                        onClick={togglePlayback}\n                    >\n                        {paused ? (\n                            <PlayArrow className={classes.playIcon} />\n                        ) : (\n                            <Pause className={classes.playIcon} />\n                        )}\n                    </IconButton>\n                    <IconButton\n                        aria-label=\"next\"\n                        disabled={!current_song}\n                        onClick={nextSong}\n                    >\n                        <SkipNext />\n                    </IconButton>\n                </div>\n            </div>\n            <CardMedia\n                className={classes.cover}\n                image={current_song?.img || \"\"}\n                title=\"Album cover\"\n            />\n        </Card>\n    );\n});\n\nexport default MediaControlCard;\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Paper,\n    List,\n    ListItem,\n    ListItemAvatar,\n    Avatar,\n    ListItemText,\n    Divider,\n    ListItemSecondaryAction,\n    Button,\n    Typography,\n} from \"@material-ui/core\";\n\nimport { useStores } from \"../../stores\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: { padding: theme.spacing(3), height: \"100%\", overflow: \"hidden\" },\n    playlists: {\n        width: \"100%\",\n        height: \"100%\",\n        overflow: \"scroll\",\n    },\n    playlist: {\n        cursor: \"pointer\",\n        \"&:hover\": {\n            background: theme.palette.background.default,\n        },\n    },\n    choosePlaylistBanner: { display: \"flex\", alignItems: \"center\" },\n}));\n\nconst Playlists = observer(() => {\n    const {\n        spotifyStore: { playlists, setPlaylist, createPlaylist },\n    } = useStores();\n\n    const classes = useStyles();\n\n    return (\n        <Paper className={classes.paper}>\n            <div className={classes.choosePlaylistBanner}>\n                <Typography variant=\"subtitle1\">\n                    Choose a playlist... Or&nbsp;\n                </Typography>\n                <Button color=\"primary\" onClick={createPlaylist}>\n                    Create a playlist\n                </Button>\n            </div>\n            <List className={classes.playlists}>\n                {playlists.map((playlist, index) => (\n                    <div key={playlist?.id || index}>\n                        <ListItem\n                            alignItems=\"flex-start\"\n                            className={classes.playlist}\n                        >\n                            <ListItemAvatar>\n                                <Avatar alt=\"\" src={playlist?.img || \"\"} />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={playlist?.title || \"\"}\n                                secondary={<>{playlist?.owner || \"\"}</>}\n                            />\n                            <ListItemSecondaryAction>\n                                <Button\n                                    color=\"primary\"\n                                    onClick={() => setPlaylist(playlist?.id)}\n                                >\n                                    Select\n                                </Button>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        <Divider variant=\"inset\" component=\"li\" />\n                    </div>\n                ))}\n            </List>\n        </Paper>\n    );\n});\n\nexport default Playlists;\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Card,\n    CardActionArea,\n    CardActions,\n    CardContent,\n    Typography,\n    CardMedia,\n    Grid,\n    Avatar,\n    Button,\n    Chip,\n} from \"@material-ui/core\";\n\nimport { useStores } from \"../../stores\";\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        background: \"#f0f0f0\",\n    },\n    memories: {\n        marginTop: \".5rem\",\n        flex: \"1 1 auto\",\n    },\n    image: {\n        height: \"10rem\",\n    },\n    selectedSong: { marginTop: \".5rem\" },\n    selectedSongText: { marginRight: \".5rem\" },\n}));\n\nconst Memories = observer(() => {\n    const {\n        applicationStore: {\n            memories,\n            deleteMemory,\n            selectedSong,\n            setSelectedSong,\n        },\n        spotifyStore: { current_song },\n    } = useStores();\n\n    const classes = useStyles();\n\n    const song_memories = memories.filter(\n        (memory) => memory.song_id === (selectedSong?.id || current_song?.id)\n    );\n\n    return (\n        <div\n            style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                flex: \"1 1 auto\",\n                overflowY: \"auto\",\n                overflowX: \"hidden\",\n            }}\n        >\n            <div style={{ flex: \"0 0 auto\" }}>\n                {selectedSong ? (\n                    <Grid container className={classes.selectedSong}>\n                        <Typography\n                            variant=\"h5\"\n                            className={classes.selectedSongText}\n                        >\n                            Memories for selected song:{\" \"}\n                        </Typography>\n                        <Chip\n                            color=\"secondary\"\n                            label={selectedSong?.title || \"Selected song\"}\n                            avatar={<Avatar>S</Avatar>}\n                            onDelete={() => {\n                                setSelectedSong();\n                            }}\n                        />\n                    </Grid>\n                ) : (\n                    <Typography\n                        variant=\"h5\"\n                        className={classes.selectedSong}\n                    >{`Memories for current song: ${\n                        current_song?.title || \"-\"\n                    }`}</Typography>\n                )}\n            </div>\n            <Grid container spacing={2} className={classes.memories}>\n                {song_memories.map((memory, index) => (\n                    <Grid key={memory?.id || index} item xs={4}>\n                        <Card className={classes.card}>\n                            <CardActionArea>\n                                <CardMedia\n                                    className={classes.image}\n                                    square\n                                    image={memory?.downloadUrl || \"\"}\n                                    title=\"Memory\"\n                                />\n                                <CardContent>\n                                    <Typography\n                                        gutterBottom\n                                        variant=\"h5\"\n                                        component=\"h2\"\n                                    >\n                                        {memory?.user || \"-\"}\n                                    </Typography>\n                                    <Typography\n                                        variant=\"body2\"\n                                        color=\"textSecondary\"\n                                        component=\"p\"\n                                    >\n                                        {memory?.text || \"-\"}\n                                    </Typography>\n                                </CardContent>\n                            </CardActionArea>\n                            <CardActions>\n                                <Button\n                                    size=\"small\"\n                                    color=\"primary\"\n                                    onClick={() => deleteMemory(memory?.pk)}\n                                >\n                                    Remove\n                                </Button>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                ))}\n            </Grid>\n        </div>\n    );\n});\n\nexport default Memories;\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    IconButton,\n    List,\n    ListItem,\n    ListItemAvatar,\n    Avatar,\n    ListItemText,\n    Divider,\n    ListItemSecondaryAction,\n    Chip,\n} from \"@material-ui/core\";\nimport { PlayArrow, Queue } from \"@material-ui/icons\";\n\nimport { useStores } from \"../../stores\";\n\nconst useStyles = makeStyles((theme) => ({\n    songs: {\n        overflow: \"scroll\",\n        width: \"100%\",\n        flex: \"1 1 auto\",\n    },\n    song: {\n        cursor: \"pointer\",\n        \"&:hover\": {\n            background: theme.palette.background.default,\n        },\n    },\n}));\n\nconst Songs = observer(({ onSelectSong }) => {\n    const {\n        applicationStore: { memories, setSelectedSong },\n        spotifyStore: { songs, playSong, queueSong },\n    } = useStores();\n\n    const classes = useStyles();\n\n    return (\n        <List className={classes.songs}>\n            {songs.map((song, index) => (\n                <div key={song?.id || index}>\n                    <ListItem alignItems=\"flex-start\" className={classes.song}>\n                        <ListItemAvatar>\n                            <Avatar alt=\"\" src={song?.img || \"\"} />\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={song?.title || \"\"}\n                            secondary={<>{song?.artists?.join(\", \") || \"\"}</>}\n                        />\n                        <ListItemSecondaryAction>\n                            <Chip\n                                color=\"secondary\"\n                                label={`${\n                                    memories?.filter(\n                                        (memory) => memory?.song_id === song?.id\n                                    )?.length\n                                }`}\n                                onClick={() => {\n                                    setSelectedSong(song?.id);\n                                    onSelectSong();\n                                }}\n                            />\n                            <IconButton\n                                aria-label=\"play\"\n                                onClick={() => playSong(song?.uri)}\n                            >\n                                <PlayArrow />\n                            </IconButton>\n                            <IconButton\n                                aria-label=\"queue\"\n                                onClick={() => queueSong(song?.uri)}\n                            >\n                                <Queue />\n                            </IconButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                    <Divider variant=\"inset\" component=\"li\" />\n                </div>\n            ))}\n        </List>\n    );\n});\n\nexport default Songs;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Grid,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Button,\n    Dialog,\n    TextField,\n    ListItem,\n    List,\n    ListItemAvatar,\n    Avatar,\n    ListItemText,\n    ListItemSecondaryAction,\n    Divider,\n    IconButton,\n} from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\nimport { observer } from \"mobx-react-lite\";\n\nimport { useToaster } from \"../../hooks/useToaster\";\nimport { useStores } from \"../../stores\";\nimport { useScreenSize } from \"../../hooks/screensize\";\n\nconst useStyles = makeStyles((theme) => ({\n    \"@global\": {\n        \".dropzone\": {\n            height: \"10rem\",\n            minHeight: \"unset\",\n        },\n        \".dropzone .MuiDropzonePreviewList-root\": {\n            marginLeft: \"-28px\",\n            marginTop: \"-119px\",\n        },\n    },\n    dialog: {\n        [theme.breakpoints.up(\"sm\")]: {\n            width: \"34rem\",\n        },\n    },\n    dialogcontent: {\n        height: \"23rem\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n}));\n\nconst AddSongDialog = observer(() => {\n    const {\n        applicationStore: { closeAddSongPopup, addSong },\n        spotifyStore: { playlist, search },\n    } = useStores();\n\n    const classes = useStyles();\n    const { addToast } = useToaster();\n    const screensize = useScreenSize();\n\n    const [query, setQuery] = useState(\"\");\n    const [debounceId, setDebounceId] = useState(null);\n    const [results, setResults] = useState([]);\n\n    const doSearch = (q) => {\n        setQuery(q);\n        clearTimeout(debounceId);\n        setDebounceId(\n            setTimeout(\n                () =>\n                    search(q)\n                        .then((result) => {\n                            setResults(result || []);\n                        })\n                        .catch(() => {}),\n                500\n            )\n        );\n    };\n\n    return (\n        <Dialog\n            onClose={() => {}}\n            open\n            fullScreen={screensize === \"mobile\"}\n            classes={{ paper: classes.dialog }}\n        >\n            <DialogTitle>\n                Add song to playlist: {playlist?.title || \"\"}\n            </DialogTitle>\n            <DialogContent className={classes.dialogcontent}>\n                <div style={{ flex: \"0 0 auto\" }}>\n                    <TextField\n                        fullWidth\n                        variant=\"outlined\"\n                        label={\"Search\"}\n                        onChange={(e) => {\n                            doSearch(e.target.value);\n                        }}\n                        value={query}\n                    />\n                </div>\n                <div style={{ overflow: \"auto\", flex: \"1 1 auto\" }}>\n                    <List>\n                        {results.map((song, index) => (\n                            <div key={song?.id || index}>\n                                <ListItem\n                                    alignItems=\"flex-start\"\n                                    className={classes.song}\n                                >\n                                    <ListItemAvatar>\n                                        <Avatar alt=\"\" src={song?.img || \"\"} />\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={song?.title || \"\"}\n                                        secondary={\n                                            <>\n                                                {song?.artists?.join(\", \") ||\n                                                    \"\"}\n                                            </>\n                                        }\n                                    />\n                                    <ListItemSecondaryAction>\n                                        <IconButton\n                                            aria-label=\"play\"\n                                            onClick={() =>\n                                                addSong(song?.uri)\n                                                    .then(() => {\n                                                        addToast(`Song added`, {\n                                                            variant: \"success\",\n                                                        });\n                                                    })\n                                                    .catch(() => {\n                                                        addToast(\n                                                            `Something went wrong`,\n                                                            {\n                                                                variant:\n                                                                    \"error\",\n                                                            }\n                                                        );\n                                                    })\n                                            }\n                                        >\n                                            <Add />\n                                        </IconButton>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                                <Divider variant=\"inset\" component=\"li\" />\n                            </div>\n                        ))}\n                    </List>\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Button\n                            fullWidth\n                            size={\"medium\"}\n                            color={\"secondary\"}\n                            variant={\"contained\"}\n                            onClick={closeAddSongPopup}\n                        >\n                            Done\n                        </Button>\n                    </Grid>\n                </Grid>\n            </DialogActions>\n        </Dialog>\n    );\n});\n\nexport default AddSongDialog;\n","import { useSnackbar } from \"notistack\";\n\nexport function useToaster() {\n    const { enqueueSnackbar } = useSnackbar();\n\n    return {\n        addToast: (message, options) => {\n            enqueueSnackbar(message, {\n                anchorOrigin: { horizontal: \"left\", vertical: \"top\" },\n                ...(options || {}),\n            });\n        },\n    };\n}\n","import React, { useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Container,\n    Typography,\n    Grid,\n    Box,\n    Paper,\n    Tabs,\n    Tab,\n    Button,\n} from \"@material-ui/core\";\n\nimport { useStores } from \"../../stores\";\nimport MediaControlCard from \"./MediaControlCard\";\nimport Playlists from \"./Playlists\";\nimport Memories from \"./Memories\";\nimport Songs from \"./Songs\";\nimport AddSongDialog from \"../shared/AddSongDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: { flex: \"1 1 auto\", overflow: \"hidden\" },\n    box: {\n        height: \"100%\",\n        overflow: \"hidden\",\n        paddingTop: theme.spacing(3),\n    },\n    songspaper: {\n        padding: theme.spacing(3),\n        height: \"100%\",\n        overflow: \"hidden\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    gridRoot: {\n        height: \"100%\",\n        flexWrap: \"unset\",\n    },\n    flexshrink: {\n        flex: \"0 0 auto\",\n    },\n    playlistscontainer: {\n        overflow: \"hidden\",\n        flex: \"1 1 auto\",\n    },\n    songsBanner: {\n        display: \"flex\",\n        flex: \"0 0 auto\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n    },\n    tabs: {\n        flex: \"0 0 auto\",\n    },\n}));\n\nconst SongsAndMemories = observer(() => {\n    const {\n        applicationStore: { openAddSongPopup },\n        spotifyStore: { playlist },\n    } = useStores();\n\n    const classes = useStyles();\n    const [currentTab, setCurrentTab] = useState(0);\n\n    return (\n        <Paper className={classes.songspaper}>\n            <div className={classes.songsBanner}>\n                <Typography component=\"h5\" variant=\"h5\">\n                    {`${playlist?.title || \"\"}`}\n                </Typography>\n                <Button color=\"primary\" onClick={openAddSongPopup}>\n                    Add a song\n                </Button>\n            </div>\n            <Tabs\n                className={classes.tabs}\n                value={currentTab}\n                onChange={(_, tab) => setCurrentTab(tab)}\n                aria-label=\"tabs\"\n                variant=\"fullWidth\"\n            >\n                <Tab label=\"Play or queue songs\" id=\"songs\" />\n                <Tab label=\"Memories\" id=\"memories\" />\n            </Tabs>\n            {currentTab === 0 && (\n                <Songs onSelectSong={() => setCurrentTab(1)} />\n            )}\n            {currentTab === 1 && <Memories />}\n        </Paper>\n    );\n});\n\nconst Host = observer(() => {\n    const {\n        applicationStore: { popup },\n        spotifyStore: { playlist_id },\n    } = useStores();\n\n    const classes = useStyles();\n\n    return (\n        <>\n            {popup === \"addSong\" && <AddSongDialog />}\n            <Container className={classes.container}>\n                <Box className={classes.box}>\n                    <Grid\n                        container\n                        spacing={2}\n                        direction=\"column\"\n                        className={classes.gridRoot}\n                    >\n                        <Grid item xs={12} className={classes.flexshrink}>\n                            <MediaControlCard />\n                        </Grid>\n                        <Grid\n                            item\n                            xs={12}\n                            className={classes.playlistscontainer}\n                        >\n                            {playlist_id ? <SongsAndMemories /> : <Playlists />}\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Container>\n        </>\n    );\n});\n\nexport default Host;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    List,\n    ListItem,\n    ListItemAvatar,\n    Avatar,\n    ListItemText,\n    ListItemSecondaryAction,\n    IconButton,\n    Divider,\n    Typography,\n    Button,\n} from \"@material-ui/core\";\nimport { RateReview } from \"@material-ui/icons\";\nimport { observer } from \"mobx-react-lite\";\n\nimport { useStores } from \"../../stores\";\n\nconst useStyles = makeStyles((theme) => ({\n    songs: {\n        overflow: \"scroll\",\n        width: \"100%\",\n        flex: \"1 1 auto\",\n    },\n    song: {\n        cursor: \"pointer\",\n        \"&:hover\": {\n            background: theme.palette.background.default,\n        },\n    },\n}));\n\nconst Songs = observer(() => {\n    const {\n        applicationStore: { openAddMemoryPopup, openAddSongPopup },\n        spotifyStore: { songs, playlist },\n    } = useStores();\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <div\n                style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                }}\n            >\n                <div>&nbsp;</div>\n                <Button color=\"primary\" onClick={openAddSongPopup}>\n                    Add a song\n                </Button>\n            </div>\n            <List className={classes.songs}>\n                <Typography component=\"h5\" variant=\"h5\">\n                    {`${playlist?.title || \"\"}`}\n                </Typography>\n                {songs.map((song, index) => (\n                    <div key={song?.id || index}>\n                        <ListItem\n                            alignItems=\"flex-start\"\n                            className={classes.song}\n                        >\n                            <ListItemAvatar>\n                                <Avatar alt=\"\" src={song?.img || \"\"} />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={song?.title || \"\"}\n                                secondary={\n                                    <>{song?.artists?.join(\", \") || \"\"}</>\n                                }\n                            />\n                            <ListItemSecondaryAction>\n                                <IconButton\n                                    aria-label=\"add-memory\"\n                                    onClick={() => openAddMemoryPopup(song?.id)}\n                                >\n                                    <RateReview />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        <Divider variant=\"inset\" component=\"li\" />\n                    </div>\n                ))}\n            </List>\n        </>\n    );\n});\n\nexport default Songs;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Grid,\n    DialogTitle,\n    DialogContent,\n    TextField,\n    DialogActions,\n    Button,\n    Dialog,\n} from \"@material-ui/core\";\nimport { observer } from \"mobx-react-lite\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\n\nimport { useStores } from \"../../stores\";\nimport { useScreenSize } from \"../../hooks/screensize\";\n\nconst useStyles = makeStyles((theme) => ({\n    \"@global\": {\n        \".dropzone\": {\n            height: \"10rem\",\n            minHeight: \"unset\",\n        },\n        \".dropzone .MuiDropzonePreviewList-root\": {\n            marginLeft: \"-28px\",\n            marginTop: \"-119px\",\n        },\n    },\n    dialog: {\n        [theme.breakpoints.up(\"sm\")]: {\n            width: \"34rem\",\n        },\n    },\n    dialogcontent: {\n        height: \"23rem\",\n    },\n}));\n\nconst AddMemoryDialog = observer(() => {\n    const {\n        applicationStore: { selectedSong, closeAddMemoryPopup, addMemory },\n    } = useStores();\n\n    const classes = useStyles();\n    const screensize = useScreenSize();\n\n    const [memory, setMemory] = useState({});\n\n    const handleFiles = async (files) => {\n        const [file] = files;\n        if (!file) return;\n        setMemory({ ...memory, file });\n    };\n\n    return (\n        <Dialog\n            onClose={() => {}}\n            open\n            fullScreen={screensize === \"mobile\"}\n            classes={{ paper: classes.dialog }}\n        >\n            <DialogTitle>\n                Add memory to song: {selectedSong?.title || \"\"}\n            </DialogTitle>\n            <DialogContent className={classes.dialogcontent}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <TextField\n                            fullWidth\n                            variant=\"outlined\"\n                            multiline\n                            rows={7}\n                            label={\"Memory\"}\n                            onChange={(e) => {\n                                setMemory({\n                                    ...memory,\n                                    text: `${e.target.value}`.substr(0, 300),\n                                });\n                            }}\n                            value={memory?.text || \"\"}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <DropzoneArea\n                            dropzoneClass=\"dropzone\"\n                            onChange={handleFiles}\n                            filesLimit={1}\n                            acceptedFiles={[\"image/*\"]}\n                            dropzoneText=\"Upload an image\"\n                            showAlerts={false}\n                        />\n                    </Grid>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <Button\n                            fullWidth\n                            size={\"medium\"}\n                            color={\"secondary\"}\n                            variant={\"contained\"}\n                            onClick={closeAddMemoryPopup}\n                        >\n                            Cancel\n                        </Button>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Button\n                            fullWidth\n                            disabled={\n                                !memory?.file || memory?.text?.length < 10\n                            }\n                            size={\"medium\"}\n                            color={\"primary\"}\n                            variant={\"contained\"}\n                            onClick={() => {\n                                addMemory(memory);\n                                closeAddMemoryPopup();\n                            }}\n                        >\n                            Send\n                        </Button>\n                    </Grid>\n                </Grid>\n            </DialogActions>\n        </Dialog>\n    );\n});\n\nexport default AddMemoryDialog;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    noplaylist: {\n        height: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n}));\n\nconst NoPlaylist = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.noplaylist}>\n            <Typography variant=\"subtitle1\">\n                The host is still choosing a playlist\n            </Typography>\n        </div>\n    );\n};\n\nexport default NoPlaylist;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container, Grid, Box, Paper } from \"@material-ui/core\";\nimport { observer } from \"mobx-react-lite\";\n\nimport { useStores } from \"../../stores\";\nimport Songs from \"./Songs\";\nimport AddMemoryDialog from \"./AddMemoryDialog\";\nimport AddSongDialog from \"../shared/AddSongDialog\";\nimport NoPlaylist from \"./NoPlaylist\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        flex: \"1 1 auto\",\n        overflow: \"hidden\",\n    },\n    box: {\n        height: \"100%\",\n        overflow: \"hidden\",\n        paddingTop: theme.spacing(3),\n    },\n    gridRoot: {\n        height: \"100%\",\n        flexWrap: \"unset\",\n    },\n    songscontainer: {\n        overflow: \"hidden\",\n        flex: \"1 1 auto\",\n    },\n    songspaper: {\n        padding: theme.spacing(3),\n        height: \"100%\",\n        overflow: \"hidden\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    songs: {\n        overflow: \"scroll\",\n        width: \"100%\",\n        flex: \"1 1 auto\",\n    },\n    song: {\n        cursor: \"pointer\",\n        \"&:hover\": {\n            background: theme.palette.background.default,\n        },\n    },\n    noplaylist: {\n        height: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    dialog: {\n        [theme.breakpoints.up(\"sm\")]: {\n            width: \"34rem\",\n        },\n    },\n    dialogcontent: {\n        height: \"23rem\",\n    },\n    dropzone: {\n        height: \"6rem\",\n    },\n}));\n\nconst Guest = observer(() => {\n    const {\n        applicationStore: { popup },\n        spotifyStore: { songs },\n    } = useStores();\n\n    const classes = useStyles();\n\n    return (\n        <>\n            {popup === \"addMemory\" && <AddMemoryDialog />}\n            {popup === \"addSong\" && <AddSongDialog />}\n            <Container className={classes.container}>\n                <Box className={classes.box}>\n                    <Grid\n                        container\n                        spacing={2}\n                        direction=\"column\"\n                        className={classes.gridRoot}\n                    >\n                        <Grid item xs={12} className={classes.songscontainer}>\n                            <Paper className={classes.songspaper}>\n                                {songs?.length ? <Songs /> : <NoPlaylist />}\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Container>\n        </>\n    );\n});\n\nexport default Guest;\n","import React, { useEffect } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Helmet } from \"react-helmet\";\n\nimport { useStores } from \"../../stores\";\n\nimport LandingPage from \"./LandingPage\";\nimport Navbar from \"./Navbar\";\nimport Host from \"../host\";\nimport Guest from \"../guest\";\n\nconst App = observer(() => {\n    const {\n        applicationStore: { initialize, nav },\n    } = useStores();\n\n    useEffect(() => {\n        initialize();\n    }, [initialize]);\n\n    return (\n        <div\n            style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                position: \"absolute\",\n                left: 0,\n                right: 0,\n                top: 0,\n                bottom: 0,\n                overflow: \"hidden\",\n            }}\n        >\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <meta name=\"theme-color\" content=\"#237fb1\" />\n\n                <title>Playlist Memories</title>\n            </Helmet>\n            {nav !== \"landing_page\" && <Navbar />}\n            {nav === \"landing_page\" && <LandingPage />}\n            {nav === \"host\" && <Host />}\n            {nav === \"guest\" && <Guest />}\n        </div>\n    );\n});\n\nexport default App;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n    palette: {\n        type: \"light\",\n        primary: {\n            main: \"#5F4B8BFF\",\n            contrastText: \"#fefefe\",\n        },\n        secondary: {\n            main: \"#E69A8DFF\",\n            contrastText: \"#fefefe\",\n        },\n        red: {\n            main: \"#ff0000\",\n        },\n        error: {\n            main: \"#ab3030\",\n        },\n        background: {\n            default: \"#f0f0f0\",\n        },\n    },\n});\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { SnackbarProvider } from \"notistack\";\n\nimport Main from \"./views/shared/Main\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <SnackbarProvider maxSnack={3}>\n            <Main />\n        </SnackbarProvider>\n    </ThemeProvider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}